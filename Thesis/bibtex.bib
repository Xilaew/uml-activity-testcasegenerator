% This file was created with JabRef 2.9.2.
% Encoding: Cp1252

@INPROCEEDINGS{Abdurazik00usingumlCollaborationTestGeneration,
  author = {Aynur Abdurazik and Jeff Offutt},
  title = {{Using UML Collaboration Diagrams for Static Checking and Test Generation}},
  booktitle = {{UML 2000 -- The Unified Modeling Language}},
  year = {2000},
  pages = {383--395},
  publisher = {Springer}
}

@INPROCEEDINGS{ali2011search,
  author = {Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand,
	Lionel},
  title = {{A Search-based OCL Constraint Solver for Model-based Test Data Generation}},
  booktitle = {International Conference On Quality Software (QSIC)},
  year = {2011},
  pages = {41--50},
  organization = {IEEE}
}

@INPROCEEDINGS{cvc,
  author = {Barrett, Clark and Conway, Christopher L. and Deters, Morgan and
	Hadarean, Liana and Jovanovi\'{c}, Dejan and King, Tim and Reynolds,
	Andrew and Tinelli, Cesare},
  title = {{CVC4}},
  booktitle = {Proceedings of the 23rd International Conference on Computer Aided
	Verification},
  year = {2011},
  series = {CAV'11},
  pages = {171--177},
  address = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid = {2032319},
  isbn = {978-3-642-22109-5},
  location = {Snowbird, UT},
  numpages = {7},
  url = {http://dl.acm.org/citation.cfm?id=2032305.2032319}
}

@ARTICLE{Belotti09couenne,
  author = {Pietro Belotti and Jon Lee and Leo Liberti and François Margot and
	Andreas W{\"a}chter},
  title = {{Branching and Bounds Tightening Techniques for Non--Convex {MINLP}}},
  journal = {Optimization Methods and Software},
  year = {2009},
  volume = {24},
  pages = {597--634},
  number = {4-5}
}

@MANUAL{lpsolve,
  title = {{lpsolve : Open source (Mixed-Integer) Linear Programming system}},
  author = {Berkelaar, Michel and Eikland, Kjell and Notebaert, Peter},
  citeulike-article-id = {3812392},
  keywords = {linear-optimisation, mdb-manuscript-1, mdb-thesis, software},
  posted-at = {2008-12-19 18:14:21},
  priority = {0}
}

@TECHREPORT{Bessiere2006,
  author = {Christian Bessiere},
  title = {{Constraint Propagation}},
  institution = {CNRS/University of Montpellier},
  year = {2006}
}

@BOOK{Boyd04ConOpt,
  title = {{Convex Optimization}},
  publisher = {Cambridge University Press},
  year = {2004},
  author = {Boyd, Stephen and Vandenberghe, Lieven},
  address = {New York, NY, USA},
  isbn = {0521833787}
}

@ARTICLE{brucker2012theoremProverBasedTesting,
  author = {Brucker, Achim D and Wolff, Burkhart},
  title = {On theorem prover-based testing},
  journal = {Formal Aspects of Computing},
  year = {2012},
  pages = {1--39},
  publisher = {Springer}
}

@BOOK{dantzig63Simplex,
  title = {{Linear Programming and Extensions}},
  publisher = {{Princeton University Press}},
  year = {1963},
  author = {Dantzig, George},
  keywords = {linear, programming, simplex}
}

@ARTICLE{DPLL,
  author = {Davis, Martin and Logemann, George and Loveland, Donald},
  title = {A machine program for theorem-proving},
  journal = {Commun. ACM},
  year = {1962},
  volume = {5},
  pages = {394--397},
  number = {7},
  month = jul,
  acmid = {368557},
  address = {New York, NY, USA},
  doi = {10.1145/368273.368557},
  issn = {0001-0782},
  issue_date = {July 1962},
  numpages = {4},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/368273.368557}
}

@ARTICLE{demillo1991constraint,
  author = {DeMillo, Richard A and Offutt, A Jefferson},
  title = {Constraint-Based Automatic Test Data Generation},
  journal = {IEEE TRANSACTIONS ON SOFTWARE ENGINEERING},
  year = {1991},
  volume = {17},
  number = {9}
}

@ARTICLE{DeMillo91constraint-basedautomaticTestDataGeneration,
  author = {Richard A. DeMillo and A. Jefferson Offutt},
  title = {Constraint-Based Automatic Test Data Generation},
  journal = {IEEE TRANSACTIONS ON SOFTWARE ENGINEERING},
  year = {1991},
  volume = {17},
  pages = {900--910},
  number = {9}
}

@INCOLLECTION{Eiben97constraintsatisfaction,
  author = {A.E. Eiben and Zs{\'o}fia Ruttkay},
  title = {{Constraint Satisfaction Problems}},
  booktitle = {Handbook of Evolutionary Computation},
  publisher = {IOP Publishing Ltd. and Oxford University Press},
  year = {1997},
  editor = {T. B{\"a}ck, D. Fogel, and M. Michalewicz},
  pages = {C5.7:1-C5.7:8}
}

@BOOK{AMPL,
  title = {{AMPL: A Modeling Language for Mathematical Programming}},
  publisher = {{Duxbury Press}},
  year = {2002},
  author = {Fourer, Robert and Gay, David M. and Kernighan, Brian W.},
  month = nov,
  day = {12},
  howpublished = {Hardcover},
  isbn = {0534388094},
  posted-at = {2009-07-25 22:24:02},
  priority = {2},
  url = {http://www.worldcat.org/isbn/0534388094}
}

@ARTICLE{jackson2002alloy,
  author = {Jackson, Daniel},
  title = {Alloy: a lightweight object modelling notation},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  year = {2002},
  volume = {11},
  pages = {256--290},
  number = {2},
  publisher = {ACM}
}

@ARTICLE{krieger2008executingUnderspecifiedOCL,
  author = {Krieger, Matthias P and Knapp, Alexander},
  title = {Executing underspecified OCL operation contracts with a SAT solver},
  journal = {Electronic Communications of the EASST},
  year = {2008},
  volume = {15}
}

@ARTICLE{kundu2009novel,
  author = {Kundu, Debasish and Samanta, Debasis},
  title = {{A Novel Approach to Generate Test Cases from UML Activity Diagrams}},
  journal = {Journal of Object Technology},
  year = {2009},
  volume = {8},
  pages = {65--83},
  number = {3},
  publisher = {Citeseer}
}

@INPROCEEDINGS{ilogcp,
  author = {Laborie, Philippe},
  title = {{IBM ILOG CP Optimizer for Detailed Scheduling Illustrated on Three
	Problems}},
  booktitle = {Proceedings of the 6th International Conference on Integration of
	AI and OR Techniques in Constraint Programming for Combinatorial
	Optimization Problems},
  year = {2009},
  series = {CPAIOR '09},
  pages = {148--162},
  address = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid = {1560593},
  doi = {10.1007/978-3-642-01929-6_12},
  isbn = {978-3-642-01928-9},
  keywords = {Constraint Programming, Scheduling},
  location = {Pittsburgh, PA},
  numpages = {15},
  url = {http://public.dhe.ibm.com/common/ssi/ecm/en/wsw14077usen/WSW14077USEN.PDF}
}

@INPROCEEDINGS{lackner2012modeling,
  author = {Lackner, Hartmut and Schlingloff, Holger and Berlin, Adlershof},
  title = {{Modeling for Automated Test Generation -- A Comparison}},
  booktitle = {Model--Based Development of Embedded Systems (MBEES)},
  year = {2012},
  volume = {VIII},
  pages = {57--70}
}

@INPROCEEDINGS{Linzhang04GeneratingTestCasefromActivityGrayBoxMethod,
author={Wang Linzhang and Yuan Jiesong and Yu Xiaofeng and Hu Jun and Li Xuandong and Zheng Guoliang},
booktitle={Software Engineering Conference, 2004. 11th Asia-Pacific},
title={{Generating test cases from UML activity diagram based on Gray-box method}},
year={2004},
pages={284-291}, 
numpages = {8}
}

@INPROCEEDINGS{malburg2011combining,
  author = {Malburg, Jan and Fraser, Gordon},
  title = {{Combining Search--based
	
	and Constraint--based Testing}},
  booktitle = {Proceedings of the 2011 26th IEEE/ACM International Conference on
	Automated Software Engineering},
  year = {2011},
  pages = {436--439},
  organization = {IEEE Computer Society}
}

@INPROCEEDINGS{mingsong2006automatic,
  author = {Mingsong, Chen and Xiaokang, Qiu and Xuandong, Li},
  title = {{Automatic Test Case Generation for UML Activity Diagrams}},
  booktitle = {Proceedings of the 2006 international workshop on Automation of software
	test},
  year = {2006},
  pages = {2--8},
  organization = {ACM}
}

@MISC{minos,
  author = {Murtagh, Bruce A. and Saunders, Michael A. and Murray, Walter and
	Gill, Philip E. and Raman, Ramesh and Kalvelagen, Erwin},
  title = {MINOS: A Solver for Large-Scale Nonlinear Optimization Problems},
  url = {http://tomopt.com/docs/minosref/tomlab_minos.php}
}


@ARTICLE{Patel12TestCaseFormationUsigUMLActivityDiagram,
  author = {Puneet Patel and Nitin Patil},
  title = {{Test case formation using UML activity diagram}},
  journal = {World Journal of Science and Technology},
  year = {2012},
  volume = {2},
  pages = {57-62},
  number = {3},
  abstract = {<p class="MsoNormal" style="text-align: justify;">The automated test
	cases generation is viewed as a guarantee to carry out effective
	and maintainable software testing. Model-based test case generation
	methodology becomes an obvious choice in software industries and
	is the focus of this work. Activity diagram is used for business
	modeling, control and object flow modeling, complex operation modeling
	etc. Main advantage of this model is its simplicity and ease of understanding
	the flow of logic of the system. However, finding test information
	from activity diagram is a formidable task. Here an approach for
	generating test cases using UML activity diagram. Also a coverage
	criterion called activity path coverage criterion is considered in
	this work. Generated test suite following activity path coverage
	criterion aims to cover more faults like synchronization faults,
	loop faults.</p>},
  issn = {2231-2587},
  keywords = {UML Activity Diagram},
  url = {http://worldjournalofscience.com/index.php/wjst/article/view/13160}
}

@INPROCEEDINGS{Pechtanun12GeneratingTestCaseFromUMLActivityDiagramBasedOnACGrammar,
  author = {Pechtanun, K. and Kansomkeat, S.},
  title = {Generation test case from UML activity diagram based on AC grammar},
  booktitle = {Computer Information Science (ICCIS), 2012 International Conference
	on},
  year = {June},
  volume = {2},
  pages = {895-899},
  doi = {10.1109/ICCISci.2012.6297153},
  keywords = {Unified Modeling Language;formal specification;grammars;program testing;AC
	grammar;UML;UML activity diagram;Unified Modeling Language;activity
	convert grammar;activity diagram;design specifications;fault detection;generation
	test case;paths coverage;requirement modelling;software development
	life-cycle;software testing;test case design;testing phase;Computers;Grammar;Information
	science;Unified modeling language;UML based testing;activity diagram;software
	testing}
}

@INPROCEEDINGS{peleska2011automated,
  author = {Peleska, Jan and Vorobev, Elena and Lapschies, Florian},
  title = {{Automated Test Case Generation with SMT--Solving and Abstract Interpretation}},
  booktitle = {NASA Formal Methods (NFM)},
  year = {2011},
  pages = {298--312},
  publisher = {Springer}
}

@INCOLLECTION{Mark00ValidatingUMLModelsandOCLConstraints,
  author = {Richters, Mark and Gogolla, Martin},
  title = {Validating UML Models and OCL Constraints},
  booktitle = {UML 2000 -- The Unified Modeling Language},
  publisher = {Springer Berlin Heidelberg},
  year = {2000},
  editor = {Evans, Andy and Kent, Stuart and Selic, Bran},
  volume = {1939},
  series = {Lecture Notes in Computer Science},
  pages = {265-277},
  doi = {10.1007/3-540-40011-7_19},
  isbn = {978-3-540-41133-8},
  language = {English},
  url = {http://dx.doi.org/10.1007/3-540-40011-7_19}
}

@INPROCEEDINGS{Offutt99GeneratingTestsFromUmlSpec,
  author = {Offutt, Jeff and Abdurazik, Aynur},
  title = {{Generating tests from UML specifications}},
  booktitle = {Proceedings of the 2nd international conference on The unified modeling
	language: beyond the standard},
  year = {1999},
  series = {UML'99},
  pages = {416--429},
  address = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid = {1767341},
  isbn = {3-540-66712-1},
  location = {Fort Collins, CO, USA},
  numpages = {14},
  url = {http://dl.acm.org/citation.cfm?id=1767297.1767341}
}
@BOOK{EMF,
  title = {{EMF: Eclipse Modeling Framework 2.0}},
  publisher = {Addison-Wesley Professional},
  year = {2009},
  author = {Steinberg, David and Budinsky, Frank and Paternostro, Marcelo and
	Merks, Ed},
  edition = {2nd},
  isbn = {0321331885}
}

@MISC{gecode,
  author = {Gecode Team},
  title = {{Gecode: Generic Constraint Development Environment}},
  year = {2006},
  note = {Available from \texttt{http://www.gecode.org}}
}

@INCOLLECTION{pex,
  author = {Tillmann, Nikolai and Halleux, Jonathan},
  title = {Pex-White Box Test Generation for .NET},
  booktitle = {Tests and Proofs},
  publisher = {Springer Berlin Heidelberg},
  year = {2008},
  editor = {Beckert, Bernhard and H{\"a}hnle, Reiner},
  volume = {4966},
  series = {Lecture Notes in Computer Science},
  pages = {134-153},
  doi = {10.1007/978-3-540-79124-9_10},
  isbn = {978-3-540-79123-2},
  url = {http://dx.doi.org/10.1007/978-3-540-79124-9_10}
}

@INPROCEEDINGS{Usman08SurveyConsistencyCheckingTechniquesforUML,
  author = {Usman, M. and Nadeem, A. and Tai-hoon Kim and Eun-suk Cho},
  title = {{A Survey of Consistency Checking Techniques for UML Models}},
  booktitle = {Advanced Software Engineering and Its Applications (ASEA)},
  year = {2008},
  pages = {57 -62},
  month = {dec.},
  doi = {10.1109/ASEA.2008.40},
  keywords = {Application software;Automation;Computer industry;Costs;Monitoring;Object
	oriented modeling;Programming;Software engineering;Software standards;Unified
	modeling language;Unified Modeling Language;object-oriented programming;program
	compilers;program diagnostics;program verification;UML class;UML
	consistency checking technique;UML sequence;Unified Modeling Language;analysis
	table;automatic code generation;monitoring strategy;object-oriented
	software design;statechart diagram;Consistency checking;UML;}
}

@UNPUBLISHED{utting2006taxonomy,
  author = {Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
  title = {{A Taxonomy of Model--Based Testing}},
  note = {(Working paper series. University of Waikato, Department of Computer
	Science. No. 04/2006). Hamilton, New Zealand: University of Waikato.},
  month = {April},
  year = {2006}
}

@PHDTHESIS{ParTeG,
  author = {Stephan Wei{\ss}leder},
  title = {{Test Models and Coverage Criteria for Automatic Model--Based Test
	Generation with UML State Machines}},
  school = {Humboldt University Berlin},
  year = {2010}
}

@ARTICLE{weissleder2010parteg,
  author = {Wei{\ss}leder, Stephan and Sokenou, Dehla},
  title = {{ParTeG--A Model-Based Testing Tool}},
  journal = {Softwaretechnik--Trends},
  year = {2010},
  volume = {30},
  number = {2},
  month = {november}
}

@INPROCEEDINGS{weissleder2008automatic,
  author = {Wei{\ss}leder, Stephan and Sokenou, Dehla},
  title = {{Automatic Test Case Generation from UML Models and OCL Expressions}},
  booktitle = {Software Engineering (Workshops)},
  year = {2008},
  pages = {423--426}
}

@ARTICLE{wielemaker2011SWIProlog,
  author = {Wielemaker, Jan and Schrijvers, Tom and Triska, Markus and Lager,
	Torbj{\"o}rn},
  title = {{SWI-Prolog}},
  journal = {Theory and Practice of Logic Programming},
  year = {2012},
  volume = {12},
  pages = {67--96},
  number = {1-2},
  abstract = {SWI-Prolog is neither a commercial Prolog system nor a purely academic
	enterprise, but increasingly a community project. The core system
	has been shaped to its current form while being used as a tool for
	building research prototypes, primarily for knowledge-intensive and
	interactive systems. Community contributions have added several interfaces
	and the constraint (CLP) libraries. Commercial involvement has created
	the initial garbage collector, added several interfaces and two development
	tools: PlDoc (a literate programming documentation system) and PlUnit
	(a unit testing environment).
	
	In this article we present SWI-Prolog as an integrating tool, supporting
	a wide range of ideas developed in the Prolog community and acting
	as glue between foreign resources. This article itself is the glue
	between technical articles on SWI-Prolog, providing context and experience
	in applying them over a longer period.},
  issn = {1471-0684}
}

@INPROCEEDINGS{Xu09ModelCheckingUMLActivityDiagramsFDR,
  author = {Dong Xu and Huaikou Miao and Philbert, Nduwimfura},
  title = {{Model Checking UML Activity Diagrams in FDR\textsuperscript{+}}},
  booktitle = {International Conference on Computer and Information Science (ICIS)},
  year = {2009},
  volume = {VIII},
  number = {8},
  pages = {1035 -1040},
  month = {june},
  organization = {IEEE},
  doi = {10.1109/ICIS.2009.107},
  keywords = {Computer industry;Formal verification;Information science;Object oriented
	modeling;Performance analysis;Software reliability;Software standards;Software
	systems;Software tools;Unified modeling language;Unified Modeling
	Language;communicating sequential processes;finite state machines;formal
	specification;object-oriented programming;program diagnostics;programming
	language semantics;reasoning about programs;software tools;systems
	analysis;CSPM specification;FDR model-checker;Hoare communicating
	sequential process;UML 2.0 specification;UML AD behavior reasoning;UML
	activity diagram;UML model verification;UML state diagram;UML state
	machine;Unified Modeling Language;behavior semantics;de-facto industrial
	standard;formal semantics;formal system behavior analysis;model checking;object-oriented
	software system modeling;operational semantics;software tool;CSP;FDR;UML
	activity diagrams;model checking;}
}

@MISC{cplex,
  title = {ILOG CPLEX},
  citeulike-article-id = {4455763},
  keywords = {cplex, lp},
  url = {http://www.ilog.com/products/cplex/}
}

@electronic{UML23Superstructure,
  title = {{OMG Unified Modeling Language\textsuperscript{\texttrademark} (OMG UML), Superstructure}},
  institution = {Object Management Group},
  year = {2010},
  month = {May},
  url = {http://www.omg.org/spec/UML/2.3/}
}

@electronic{OCL,
  title = {{OMG Object Constraint Language (OCL)}},
  institution = {Object Management Group},
  year = {2012},
  month = {May},
  url = {http://www.omg.org/spec/OCL/2.3.1}
}

@MISC{cplex2,
  title = {ILOG CPLEX 11.0},
  year = {2007},
  keywords = {cplex, lp},
  url = {http://www.ilog.com/products/cplex/}
}

