% This file was created with JabRef 2.9.2.
% Encoding: Cp1252

@INCOLLECTION{Abdurazik00usingumlCollaborationTestGeneration,
  author = {Aynur Abdurazik and Jeff Offutt},
  title = {{Using UML Collaboration Diagrams for Static Checking and Test Generation}},
  booktitle = {{\guillemotleft}UML{\guillemotright}' 2000 -- The Unified Modeling
	Language},
  publisher = {Springer},
  year = {2000},
  volume = {1939},
  series = {Lecture Notes in Computer Science},
  pages = {383--395},
  address = {Berlin, Heidelberg},
  doi = {10.1007/3-540-40011-7_28},
  url = {http://dx.doi.org/10.1007/3-540-40011-7_28}
}

@INPROCEEDINGS{ali2011search,
  author = {Ali, Shaukat and Iqbal, Muhammad Zohaib and Arcuri, Andrea and Briand,
	Lionel},
  title = {{A Search-based OCL Constraint Solver for Model-based Test Data Generation}},
  booktitle = {International Conference on Quality Software (QSIC)},
  year = {2011},
  pages = {41--50},
  doi = {10.1109/QSIC.2011.17},
  url = {http://dx.doi.org/10.1109/QSIC.2011.17}
}

@INCOLLECTION{cvc,
  author = {Barrett, Clark and Conway, Christopher L. and Deters, Morgan and
	Hadarean, Liana and Jovanovi\'{c}, Dejan and King, Tim and Reynolds,
	Andrew and Tinelli, Cesare},
  title = {{CVC4}},
  booktitle = {Computer Aided Verification},
  publisher = {Springer},
  year = {2011},
  editor = {Gopalakrishnan, Ganesh and Qadeer, Shaz},
  volume = {6806},
  series = {Lecture Notes in Computer Science},
  pages = {171--177},
  address = {Berlin, Heidelberg},
  acmid = {2032319},
  doi = {10.1007/978-3-642-22110-1_14},
  isbn = {978-3-642-22109-5},
  location = {Snowbird, UT},
  numpages = {7},
  url = {http://dx.doi.org/10.1007/978-3-642-22110-1_14}
}

@ARTICLE{Belotti09couenne,
  author = {Pietro Belotti and Jon Lee and Leo Liberti and Fran\c{c}ois Margot
	and Andreas W{\"a}chter},
  title = {{Branching and Bounds Tightening Techniques for Non--Convex {MINLP}}},
  journal = {Optimization Methods and Software},
  year = {2009},
  volume = {24},
  pages = {597--634},
  number = {4-5},
  doi = {10.1080/10556780903087124},
  url = {http://dx.doi.org/10.1080/10556780903087124}
}

@ELECTRONIC{lpsolve,
  author = {Berkelaar, Michel and Eikland, Kjell and Notebaert, Peter},
  title = {{lpsolve : Open source (Mixed-Integer) Linear Programming system}},
  url = {http://lpsolve.sourceforge.net/5.5/},
  citeulike-article-id = {3812392},
  keywords = {linear-optimisation, mdb-manuscript-1, mdb-thesis, software},
  posted-at = {2008-12-19 18:14:21},
  priority = {0}
}

@TECHREPORT{Bessiere2006,
  author = {Christian Bessiere},
  title = {{Constraint Propagation}},
  institution = {CNRS/University of Montpellier},
  year = {2006}
}

@BOOK{Boyd04ConOpt,
  title = {{Convex Optimization}},
  publisher = {Cambridge University Press},
  year = {2004},
  author = {Boyd, Stephen and Vandenberghe, Lieven},
  address = {New York, NY, USA},
  isbn = {0521833787}
}

@ARTICLE{brucker2012theoremProverBasedTesting,
  author = {Brucker, Achim D and Wolff, Burkhart},
  title = {{On theorem prover-based testing}},
  journal = {Formal Aspects of Computing},
  year = {2013},
  volume = {25},
  pages = {683--721},
  number = {5},
  doi = {10.1007/s00165-012-0222-y},
  publisher = {Springer},
  url = {http://dx.doi.org/10.1007/s00165-012-0222-y}
}

@BOOK{dantzig63Simplex,
  title = {{Linear Programming and Extensions}},
  publisher = {Princeton University Press},
  year = {1963},
  author = {Dantzig, George},
  keywords = {linear, programming, simplex}
}

@ARTICLE{DPLL,
  author = {Davis, Martin and Logemann, George and Loveland, Donald},
  title = {{A Machine Program for Theorem--Proving}},
  journal = {Communications of the ACM},
  year = {1962},
  volume = {5},
  pages = {394--397},
  number = {7},
  month = {July},
  acmid = {368557},
  address = {New York, NY, USA},
  doi = {10.1145/368273.368557},
  issn = {0001-0782},
  issue_date = {July 1962},
  numpages = {4},
  publisher = {ACM},
  url = {http://doi.acm.org/10.1145/368273.368557}
}

@ARTICLE{DeMillo91constraint-basedautomaticTestDataGeneration,
  author = {Richard A. DeMillo and A. Jefferson Offutt},
  title = {Constraint-Based Automatic Test Data Generation},
  journal = {IEEE TRANSACTIONS ON SOFTWARE ENGINEERING},
  year = {1991},
  volume = {17},
  pages = {900--910},
  number = {9}
}

@INCOLLECTION{Eiben97constraintsatisfaction,
  author = {A.E. Eiben and Zs{\'o}fia Ruttkay},
  title = {{Constraint Satisfaction Problems}},
  booktitle = {Handbook of Evolutionary Computation},
  publisher = {IOP Publishing Ltd. and Oxford University Press},
  year = {1997},
  editor = {T. B{\"a}ck, D. Fogel, and M. Michalewicz},
  pages = {1--8}
}

@BOOK{AMPL,
  title = {{AMPL: A Modeling Language for Mathematical Programming}},
  publisher = {Duxbury Press},
  year = {2002},
  author = {Fourer, Robert and Gay, David M. and Kernighan, Brian W.},
  edition = {2},
  day = {12},
  howpublished = {Hardcover},
  isbn = {0534388094},
  posted-at = {2009-07-25 22:24:02},
  priority = {2},
  url = {http://www.ampl.com/BOOK/index.html}
}

@ELECTRONIC{gecode,
  author = {{Gecode Team}},
  year = {2006},
  title = {{Gecode: Generic Constraint Development Environment}},
  url = {http://www.gecode.org}
}

@ARTICLE{jackson2002alloy,
  author = {Jackson, Daniel},
  title = {Alloy: a lightweight object modelling notation},
  journal = {ACM Transactions on Software Engineering and Methodology (TOSEM)},
  year = {2002},
  volume = {11},
  pages = {256--290},
  number = {2},
  publisher = {ACM}
}

@ARTICLE{krieger2008executingUnderspecifiedOCL,
  author = {Krieger, Matthias P and Knapp, Alexander},
  title = {{Executing Underspecified OCL Operation Contracts with a SAT Solver}},
  journal = {Electronic Communications of the EASST},
  year = {2008},
  volume = {15},
  url = {http://journal.ub.tu-berlin.de/eceasst/article/view/176}
}

@ARTICLE{kundu2009novel,
  author = {Kundu, Debasish and Samanta, Debasis},
  title = {{A Novel Approach to Generate Test Cases from UML Activity Diagrams}},
  journal = {Journal of Object Technology},
  year = {2009},
  volume = {8},
  pages = {65--83},
  number = {3},
  doi = {10.5381/jot.2009.8.3.a1},
  url = {http://dx.doi.org/10.5381/jot.2009.8.3.a1}
}

@MASTERSTHESIS{Kurth2014AutomatedGen,
  author = {Felix Kurth},
  title = {{Automated Generation of Unit Tests from UML Activity Diagrams using
	the AMPL Interface for Constraint Solvers}},
  school = {Hamburg University of Technology},
  year = {2014},
  address = {Germany, Hamburg},
  month = {January},
  owner = {xilaew},
  timestamp = {2014.01.15},
  url = {http://www.sts.tuhh.de/pw-and-m-theses/kurth14.pdf}
}

@INCOLLECTION{ilogcp,
  author = {Laborie, Philippe},
  title = {{IBM ILOG CP Optimizer for Detailed Scheduling Illustrated on Three
	Problems}},
  booktitle = {Integration of AI and OR Techniques in Constraint Programming for
	Combinatorial Optimization Problems},
  publisher = {Springer},
  year = {2009},
  editor = {Hoeve, Willem-Jan and Hooker, JohnN.},
  volume = {5547},
  series = {Lecture Notes in Computer Science},
  pages = {148--162},
  address = {Berlin, Heidelberg},
  acmid = {1560593},
  doi = {10.1007/978-3-642-01929-6_12},
  isbn = {978-3-642-01928-9},
  keywords = {Constraint Programming, Scheduling},
  location = {Pittsburgh, PA},
  numpages = {15},
  url = {http://dx.doi.org/10.1007/978-3-642-01929-6_12}
}

@INPROCEEDINGS{lackner2012modeling,
  author = {Lackner, Hartmut and Schlingloff, Holger and Berlin, Adlershof},
  title = {{Modeling for Automated Test Generation -- A Comparison}},
  booktitle = {Model--Based Development of Embedded Systems (MBEES)},
  year = {2012},
  volume = {8},
  pages = {57--70},
  url = {http://www.vldb.informatik.hu-berlin.de/~hs/Publikationen/2012_MBEES_Lackner-Schlingloff_Modeling-for-Automated-Test-Generation--A-Comparison.pdf}
}

@INPROCEEDINGS{Linzhang04GeneratingTestCasefromActivityGrayBoxMethod,
  author = {Wang Linzhang and Yuan Jiesong and Yu Xiaofeng and Hu Jun and Li
	Xuandong and Zheng Guoliang},
  title = {{Generating Test Cases from UML Activity Diagram based on Gray--Box
	Method}},
  booktitle = {Asia--Pacific Software Engineering Conference},
  year = {2004},
  pages = {284-291},
  address = {Los Alamitos, CA, USA},
  organization = {IEEE Computer Society},
  doi = {10.1109/APSEC.2004.55},
  numpages = {8},
  url = {http://doi.ieeecomputersociety.org/10.1109/APSEC.2004.55}
}

@INPROCEEDINGS{malburg2011combining,
  author = {Malburg, Jan and Fraser, Gordon},
  title = {{Combining Search--based and Constraint--based Testing}},
  booktitle = {International Conference on Automated Software Engineering},
  year = {2011},
  pages = {436--439},
  organization = {IEEE Computer Society},
  doi = {10.1109/ASE.2011.6100092},
  url = {http://dx.doi.org/10.1109/ASE.2011.6100092}
}

@INPROCEEDINGS{mingsong2006automatic,
  author = {Mingsong, Chen and Xiaokang, Qiu and Xuandong, Li},
  title = {{Automatic Test Case Generation for UML Activity Diagrams}},
  booktitle = {International Workshop on Automation of Software Test},
  year = {2006},
  pages = {2--8},
  organization = {ACM},
  doi = {10.1145/1138929.1138931},
  keywords = {UML activity diagram, instrumentation, random test case, test adequacy},
  url = {http://dx.doi.org/10.1145/1138929.1138931}
}

@ELECTRONIC{minos,
  author = {Murtagh, Bruce A. and Saunders, Michael A. and Murray, Walter and
	Gill, Philip E. and Raman, Ramesh and Kalvelagen, Erwin},
  title = {{MINOS: A Solver for Large-Scale Nonlinear Optimization Problems}},
  url = {http://sbsi-sol-optimize.com/asp/sol_product_minos.htm}
}

@STANDARD{OCL,
  title = {{OMG Object Constraint Language (OCL)}},
  institution = {Object Management Group},
  author = {{Object Management Group (OMG)}},
  month = {May},
  year = {2012},
  url = {http://www.omg.org/spec/OCL/2.3.1}
}

@STANDARD{UML23Superstructure,
  title = {{OMG Unified Modeling Language\textsuperscript{\texttrademark} (OMG
	UML), Superstructure}},
  institution = {Object Management Group},
  author = {{Object Management Group (OMG)}},
  month = {May},
  year = {2010},
  url = {http://www.omg.org/spec/UML/2.3/}
}

@STANDARD{m2t.standard,
  title = {{MOF Model To Text Transformation Language (MOFM2T) 1.0}},
  institution = {{Object Management Group}},
  author = {{Object Management Group (OMG)}},
  month = {January},
  year = {2008},
  url = {http://www.omg.org/spec/MOFM2T/1.0/},
  citeulike-article-id = {10117643},
  citeulike-linkout-0 = {http://www.omg.org/spec/MOFM2T/1.0/},
  keywords = {mofm2t},
  posted-at = {2011-12-11 22:55:31}
}

@INCOLLECTION{Offutt99GeneratingTestsFromUmlSpec,
  author = {Offutt, Jeff and Abdurazik, Aynur},
  title = {{Generating tests from UML specifications}},
  booktitle = {{\guillemotleft}UML{\guillemotright}' 99 -- The Unified Modeling
	Language},
  publisher = {Springer},
  year = {1999},
  editor = {France, Robert and Rumpe, Bernhard},
  volume = {1723},
  series = {Lecture Notes in Computer Science},
  pages = {416--429},
  address = {Berlin, Heidelberg},
  acmid = {1767341},
  doi = {10.1007/3-540-46852-8_30},
  isbn = {3-540-66712-1},
  location = {Fort Collins, CO, USA},
  numpages = {14},
  url = {http://dx.doi.org/10.1007/3-540-46852-8_30}
}

@ARTICLE{Patel12TestCaseFormationUsigUMLActivityDiagram,
  author = {Puneet Patel and Nitin Patil},
  title = {{Test case formation using UML activity diagram}},
  journal = {World Journal of Science and Technology},
  year = {2012},
  volume = {2},
  pages = {57--62},
  number = {3},
  abstract = {<p class="MsoNormal" style="text-align: justify;">The automated test
	cases generation is viewed as a guarantee to carry out effective
	and maintainable software testing. Model-based test case generation
	methodology becomes an obvious choice in software industries and
	is the focus of this work. Activity diagram is used for business
	modeling, control and object flow modeling, complex operation modeling
	etc. Main advantage of this model is its simplicity and ease of understanding
	the flow of logic of the system. However, finding test information
	from activity diagram is a formidable task. Here an approach for
	generating test cases using UML activity diagram. Also a coverage
	criterion called activity path coverage criterion is considered in
	this work. Generated test suite following activity path coverage
	criterion aims to cover more faults like synchronization faults,
	loop faults.</p>},
  issn = {2231-2587},
  keywords = {UML Activity Diagram},
  url = {http://worldjournalofscience.com/index.php/wjst/article/view/13160}
}

@INPROCEEDINGS{Pechtanun12GeneratingTestCaseFromUMLActivityDiagramBasedOnACGrammar,
  author = {Pechtanun, K. and Kansomkeat, S.},
  title = {{Generation test case from UML activity diagram based on AC grammar}},
  booktitle = {International Conference on Computer and Information Science (ICCIS)},
  year = {June},
  volume = {2},
  pages = {895-899},
  organization = {IEEE},
  doi = {10.1109/ICCISci.2012.6297153},
  keywords = {Unified Modeling Language;formal specification;grammars;program testing;AC
	grammar;UML;UML activity diagram;Unified Modeling Language;activity
	convert grammar;activity diagram;design specifications;fault detection;generation
	test case;paths coverage;requirement modelling;software development
	life-cycle;software testing;test case design;testing phase;Computers;Grammar;Information
	science;Unified modeling language;UML based testing;activity diagram;software
	testing}
}

@INCOLLECTION{peleska2011automated,
  author = {Peleska, Jan and Vorobev, Elena and Lapschies, Florian},
  title = {{Automated Test Case Generation with SMT--Solving and Abstract Interpretation}},
  booktitle = {NASA Formal Methods},
  publisher = {Springer},
  year = {2011},
  editor = {Bobaru, Mihaela and Havelund, Klaus and Holzmann, GerardJ. and Joshi,
	Rajeev},
  volume = {6617},
  series = {Lecture Notes in Computer Science},
  pages = {298--312},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-642-20398-5_22},
  url = {http://dx.doi.org/10.1007/978-3-642-20398-5_22}
}

@MASTERSTHESIS{Rezaee2014ANew,
  author = {Amin Rezaee},
  title = {{A New Approach to Optimized Generation of Test Cases using UML State
	Machine}},
  school = {University of Isfahan},
  year = {2014},
  address = {Iran, Isfahan},
  month = {February},
  timestamp = {2014.02.18}
}

@INCOLLECTION{Mark00ValidatingUMLModelsandOCLConstraints,
  author = {Richters, Mark and Gogolla, Martin},
  title = {Validating UML Models and OCL Constraints},
  booktitle = {{\guillemotleft}UML{\guillemotright}' 2000 -- The Unified Modeling
	Language},
  publisher = {Springer},
  year = {2000},
  editor = {Evans, Andy and Kent, Stuart and Selic, Bran},
  volume = {1939},
  series = {Lecture Notes in Computer Science},
  pages = {265-277},
  address = {Berlin, Heidelberg},
  doi = {10.1007/3-540-40011-7_19},
  isbn = {978-3-540-41133-8},
  language = {English},
  url = {http://dx.doi.org/10.1007/3-540-40011-7_19}
}

@BOOK{EMF,
  title = {{EMF: Eclipse Modeling Framework 2.0}},
  publisher = {Addison-Wesley Professional},
  year = {2009},
  author = {Steinberg, David and Budinsky, Frank and Paternostro, Marcelo and
	Merks, Ed},
  edition = {2nd},
  isbn = {0321331885}
}

@INCOLLECTION{pex,
  author = {Tillmann, Nikolai and Halleux, Jonathan},
  title = {{Pex-White Box Test Generation for .NET}},
  booktitle = {Tests and Proofs},
  publisher = {Springer},
  year = {2008},
  editor = {Beckert, Bernhard and H{\"a}hnle, Reiner},
  volume = {4966},
  series = {Lecture Notes in Computer Science},
  pages = {134--153},
  address = {Berlin, Heidelberg},
  doi = {10.1007/978-3-540-79124-9_10},
  isbn = {978-3-540-79123-2},
  url = {http://dx.doi.org/10.1007/978-3-540-79124-9_10}
}

@ARTICLE{utting2006taxonomy,
  author = {Utting, Mark and Pretschner, Alexander and Legeard, Bruno},
  title = {{A Taxonomy of Model-Based Testing Approaches}},
  journal = {Software Testing, Verification and Reliability},
  year = {2012},
  volume = {22},
  pages = {297--312},
  number = {5},
  doi = {10.1002/stvr.456},
  keywords = {model-based testing approaches, taxonomy, survey},
  publisher = {Wiley Online Library},
  url = {http://dx.doi.org/10.1002/stvr.456}
}

@ELECTRONIC{PartegWebsite,
  author = {Stephan Wei{\ss}leder},
  year = {2013},
  title = {{ParTeG -- homepage}},
  url = {http://parteg.sourceforge.net/},
  owner = {xilaew},
  timestamp = {2014.01.13}
}

@PHDTHESIS{ParTeG,
  author = {Stephan Wei{\ss}leder},
  title = {{Test Models and Coverage Criteria for Automatic Model--Based Test
	Generation with UML State Machines}},
  school = {Humboldt University Berlin},
  year = {2010},
  url = {http://model-based-testing.de/data/weissleder_phd_thesis.pdf}
}

@ARTICLE{weissleder2010parteg,
  author = {Wei{\ss}leder, Stephan and Sokenou, Dehla},
  title = {{ParTeG--A Model-Based Testing Tool}},
  journal = {Softwaretechnik--Trends},
  year = {2010},
  volume = {30},
  number = {2},
  url = {http://pi.informatik.uni-siegen.de/stt/30_2/01_Fachgruppenberichte/TAV/TAV29P08Sokenou.pdf}
}

@INPROCEEDINGS{weissleder2008automatic,
  author = {Wei{\ss}leder, Stephan and Sokenou, Dehla},
  title = {{Automatic Test Case Generation from UML Models and OCL Expressions}},
  booktitle = {Software Engineering (Workshops)},
  year = {2008},
  pages = {423--426}
}

@ARTICLE{wielemaker2011SWIProlog,
  author = {Wielemaker, Jan and Schrijvers, Tom and Triska, Markus and Lager,
	Torbj{\"o}rn},
  title = {{SWI-Prolog}},
  journal = {Theory and Practice of Logic Programming},
  year = {2012},
  volume = {12},
  pages = {67--96},
  number = {1-2},
  abstract = {SWI-Prolog is neither a commercial Prolog system nor a purely academic
	enterprise, but increasingly a community project. The core system
	has been shaped to its current form while being used as a tool for
	building research prototypes, primarily for knowledge-intensive and
	interactive systems. Community contributions have added several interfaces
	and the constraint (CLP) libraries. Commercial involvement has created
	the initial garbage collector, added several interfaces and two development
	tools: PlDoc (a literate programming documentation system) and PlUnit
	(a unit testing environment).
	
	In this article we present SWI-Prolog as an integrating tool, supporting
	a wide range of ideas developed in the Prolog community and acting
	as glue between foreign resources. This article itself is the glue
	between technical articles on SWI-Prolog, providing context and experience
	in applying them over a longer period.},
  issn = {1471-0684}
}

@INPROCEEDINGS{Xu09ModelCheckingUMLActivityDiagramsFDR,
  author = {Dong Xu and Huaikou Miao and Philbert, Nduwimfura},
  title = {{Model Checking UML Activity Diagrams in FDR\textsuperscript{+}}},
  booktitle = {International Conference on Computer and Information Science (ICCIS)},
  year = {2009},
  volume = {VIII},
  number = {8},
  pages = {1035 -1040},
  month = {June},
  organization = {IEEE},
  doi = {10.1109/ICIS.2009.107},
  keywords = {Computer industry;Formal verification;Information science;Object oriented
	modeling;Performance analysis;Software reliability;Software standards;Software
	systems;Software tools;Unified modeling language;Unified Modeling
	Language;communicating sequential processes;finite state machines;formal
	specification;object-oriented programming;program diagnostics;programming
	language semantics;reasoning about programs;software tools;systems
	analysis;CSPM specification;FDR model-checker;Hoare communicating
	sequential process;UML 2.0 specification;UML AD behavior reasoning;UML
	activity diagram;UML model verification;UML state diagram;UML state
	machine;Unified Modeling Language;behavior semantics;de-facto industrial
	standard;formal semantics;formal system behavior analysis;model checking;object-oriented
	software system modeling;operational semantics;software tool;CSP;FDR;UML
	activity diagrams;model checking;}
}

@ELECTRONIC{cplex2,
  year = {2007},
  title = {ILOG CPLEX 11.0},
  url = {http://www.ilog.com/products/cplex/},
  keywords = {cplex, lp}
}

