@INPROCEEDINGS{Usman08SurveyConsistencyCheckingTechniquesforUML,
author={Usman, M. and Nadeem, A. and Tai-hoon Kim and Eun-suk Cho},
booktitle={Advanced Software Engineering and Its Applications, 2008. ASEA 2008}, 
title={A Survey of Consistency Checking Techniques for UML Models},
year={2008},
month={dec.},
volume={},
number={},
pages={57 -62},
keywords={Application software;Automation;Computer industry;Costs;Monitoring;Object oriented modeling;Programming;Software engineering;Software standards;Unified modeling language;Unified Modeling Language;object-oriented programming;program compilers;program diagnostics;program verification;UML class;UML consistency checking technique;UML sequence;Unified Modeling Language;analysis table;automatic code generation;monitoring strategy;object-oriented software design;statechart diagram;Consistency checking;UML;},
doi={10.1109/ASEA.2008.40},
ISSN={},}

@INPROCEEDINGS{Xu09ModelCheckingUMLActivities,
author={Dong Xu and Huaikou Miao and Philbert, N.},
booktitle={Computer and Information Science, 2009. ICIS 2009. Eighth IEEE/ACIS International Conference on}, 
title={Model Checking UML Activity Diagrams in FDR},
year={2009},
month={june},
volume={},
number={},
pages={1035 -1040},
keywords={Computer industry;Formal verification;Information science;Object oriented modeling;Performance analysis;Software reliability;Software standards;Software systems;Software tools;Unified modeling language;Unified Modeling Language;communicating sequential processes;finite state machines;formal specification;object-oriented programming;program diagnostics;programming language semantics;reasoning about programs;software tools;systems analysis;CSPM specification;FDR model-checker;Hoare communicating sequential process;UML 2.0 specification;UML AD behavior reasoning;UML activity diagram;UML model verification;UML state diagram;UML state machine;Unified Modeling Language;behavior semantics;de-facto industrial standard;formal semantics;formal system behavior analysis;model checking;object-oriented software system modeling;operational semantics;software tool;CSP;FDR;UML activity diagrams;model checking;},
doi={10.1109/ICIS.2009.107},
ISSN={},}

@INPROCEEDINGS{Xu09ModelCheckingUMLActivityDiagramsFDR,
author={Dong Xu and Huaikou Miao and Philbert, N.},
booktitle={Computer and Information Science, 2009. ICIS 2009. Eighth IEEE/ACIS International Conference on}, 
title={Model Checking UML Activity Diagrams in FDR},
year={2009},
month={june},
volume={},
number={},
pages={1035 -1040},
keywords={Computer industry;Formal verification;Information science;Object oriented modeling;Performance analysis;Software reliability;Software standards;Software systems;Software tools;Unified modeling language;Unified Modeling Language;communicating sequential processes;finite state machines;formal specification;object-oriented programming;program diagnostics;programming language semantics;reasoning about programs;software tools;systems analysis;CSPM specification;FDR model-checker;Hoare communicating sequential process;UML 2.0 specification;UML AD behavior reasoning;UML activity diagram;UML model verification;UML state diagram;UML state machine;Unified Modeling Language;behavior semantics;de-facto industrial standard;formal semantics;formal system behavior analysis;model checking;object-oriented software system modeling;operational semantics;software tool;CSP;FDR;UML activity diagrams;model checking;},
doi={10.1109/ICIS.2009.107},
ISSN={},}

@INPROCEEDINGS{Aleman00CanIntuitionBecomeRigorous?,
author={Aleman, J.L.F. and Alvarez, A.T.},
booktitle={Software Reliability Engineering, 2000. ISSRE 2000. Proceedings. 11th International Symposium on}, 
title={Can intuition become rigorous? Foundations for UML model verification tools},
year={2000},
month={},
volume={},
number={},
pages={344 -355},
keywords={Engineering management;Formal languages;Informatics;Natural languages;Object oriented modeling;Proposals;Prototypes;Software engineering;Software standards;Unified modeling language;algebraic specification;object-oriented languages;object-oriented programming;program verification;software reliability;specification languages;Maude;Object Management Group;UML Statechart diagram;UML informal specifications;UML metamodel level;UML model verification tools;Unified Modeling Language;algebraic specification formal theory;executable formal language;formal models;formal revision;functional prototypes;object oriented analysis;object oriented notation;orthogonality property;rigorous UML CASE tools;rigorous intuition;},
doi={10.1109/ISSRE.2000.885885},
ISSN={1071-9458},}

@INPROCEEDINGS{Abdurazik00usingumlCollaborationTestGeneration,
    author = {Aynur Abdurazik and Jeff Offutt},
    title = {Using UML collaboration diagrams for static checking and test generation},
    booktitle = {},
    year = {2000},
    pages = {383--395},
    publisher = {Springer}
}

@INPROCEEDINGS{Pap01completenessand,
    author = {Zs. Pap and I. Majzik and A. Pataricza and A. Szegi},
    title = {Completeness and Consistency Analysis of UML Statechart Specifications},
    booktitle = {Proc. IEEE Design and Diagnostics of Electronic Circuits and Systems Workshop (DDECS'2001},
    year = {2001},
    pages = {83--90}
}

@inproceedings{Offutt:1999:GeneratingTestsFromUmlSpec,
 author = {Offutt, Jeff and Abdurazik, Aynur},
 title = {Generating tests from UML specifications},
 booktitle = {Proceedings of the 2nd international conference on The unified modeling language: beyond the standard},
 series = {UML'99},
 year = {1999},
 isbn = {3-540-66712-1},
 location = {Fort Collins, CO, USA},
 pages = {416--429},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=1767297.1767341},
 acmid = {1767341},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg}
} 

@inproceedings{mohagheghi2008towards,
  title={Towards a tool-supported quality model for model-driven engineering},
  author={Mohagheghi, Parastoo and Dehlen, Vegard and Neple, Tor},
  year = {2008}
}

@inproceedings{haesen2004implementing,
  title={Implementing consistency management techniques for conceptual modeling},
  author={Haesen, Raf and Snoeck, Monique},
  booktitle={Third International Workshop, Consistency Problems in UML-based Software Development III--Understanding and Usage of Dependency Relationships},
  pages={99--113},
  year={2004}
}

@INPROCEEDINGS{Andrew05ACOTScomponentComprehensionProcess,
author={Andrews, A.A. and Stefik, A. and Picone, N. and Sudipto Ghosh},
booktitle={Program Comprehension, 2005. IWPC 2005. Proceedings. 13th International Workshop on}, 
title={A COTS component comprehension process},
year={2005},
month={may},
volume={},
number={},
pages={ 135 - 144},
keywords={Application software;Assembly systems;Component architectures;Computer science;Java;Process design;Programming;Software engineering;System testing;Unified modeling language; Unified Modeling Language; object-oriented programming; software development management; COTS component comprehension process; UML component based software development approach; component architecture; hotel reservation system; COTS components; Component architecture; UML; component selection; comprehension model; comprehension process; design;},
doi={10.1109/WPC.2005.1},
ISSN={1092-8138},}

@INPROCEEDINGS{Iyenghar11Model-BasedTestAutomationForEmbededSystemsUML+UTP,
author={Iyenghar, P. and Pulvermueller, E. and Westerkamp, C.},
booktitle={Emerging Technologies Factory Automation (ETFA), 2011 IEEE 16th Conference on}, 
title={Towards Model-Based Test automation for embedded systems using UML and UTP},
year={2011},
month={sept.},
volume={},
number={},
pages={1 -9},
keywords={Automation;Context;Embedded software;Embedded systems;Monitoring;Testing;Unified modeling language;Unified Modeling Language;embedded systems;UML testing profile;UTP standard;Unified Modeling Language;embedded software engineering projects;model-based test automation;model-based testing;model-driven development;resource-constrained real-time embedded systems;test artifacts generation algorithm;},
doi={10.1109/ETFA.2011.6058982},
ISSN={1946-0740},}

@INPROCEEDINGS{Nordstrom00formalizingTheSpecOfModelIntegratedProgramSynthesisEnvironments,
author={Nordstrom, G.},
booktitle={Aerospace Conference Proceedings, 2000 IEEE}, 
title={Formalizing the specification of model integrated program synthesis environments},
year={2000},
month={},
volume={4},
number={},
pages={523 -532 vol.4},
keywords={Application software;Computer architecture;Large scale integration;Large-scale systems;Metamodeling;Microwave integrated circuits;Risk management;Software maintenance;Software systems;Unified modeling language;application generators;formal specification;meta data;programming language semantics;simulation languages;software architecture;MultiGraph Architecture toolset;UML class diagrams;automatic transformation;constraint management;design environment evolution;domain-specific models;graphical domain-specific environments;large-scale computer-based systems;logic constraint language expressions;metamodel;model integrated computing;model integrated program synthesis environments;modeling language semantics;presentation requirements;semantic requirements;specification formalization;syntactic requirements;},
doi={10.1109/AERO.2000.878463},
ISSN={1095-323X},}

@INPROCEEDINGS{Pechtanun12GeneratingTestCaseFromUMLActivityDiagramBasedOnACGrammar, 
author={Pechtanun, K. and Kansomkeat, S.}, 
booktitle={Computer Information Science (ICCIS), 2012 International Conference on}, 
title={Generation test case from UML activity diagram based on AC grammar}, 
year={June}, 
volume={2}, 
pages={895-899}, 
keywords={Unified Modeling Language;formal specification;grammars;program testing;AC grammar;UML;UML activity diagram;Unified Modeling Language;activity convert grammar;activity diagram;design specifications;fault detection;generation test case;paths coverage;requirement modelling;software development life-cycle;software testing;test case design;testing phase;Computers;Grammar;Information science;Unified modeling language;UML based testing;activity diagram;software testing}, 
doi={10.1109/ICCISci.2012.6297153},}

@article{Linzhang04GeneratingTestCasefromActivityGrayBoxMethod,
author = {Wang Linzhang and Yuan Jiesong and Yu Xiaofeng and Hu Jun and Li Xuandong and Zheng Guoliang},
title = {Generating Test Cases from UML Activity Diagram based on Gray-Box Method},
journal ={Asia-Pacific Software Engineering Conference},
volume = {0},
issn = {1530-1362},
year = {2004},
pages = {284-291},
doi = {http://doi.ieeecomputersociety.org/10.1109/APSEC.2004.55},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
}

@INPROCEEDINGS{Restropo11ValidatingSDLbasedArchitecturalDesign_NewCoverageCriteria, 
author={Restrepo, A. and Wong, W.E.}, 
booktitle={Secure Software Integration and Reliability Improvement (SSIRI), 2011 Fifth International Conference on}, title={Validation of SDL-Based Architectural Design Models: New Coverage Criteria}, 
year={June}, 
pages={51-59}, 
abstract={As the capability to automatically generate code from different models becomes more sophisticated, it is critical that these models be adequately tested for quality assurance prior to code generation. Although simulation-based blackbox testing strategies exist for these models, it is important that we also employ white-box testing strategies similar to those used to test implementation code. More precisely, we apply coverage testing to architectural design models represented by SDL (Specification and Description Language). Our previous study [30] defined a methodology for automatic test generation with respect to structural-based criteria such as all-node and all-edge. Now, we propose new coverage criteria such as n-step message transfer and sender-receiver round-trip, aiming at the communication between SDL processes.}, 
keywords={program compilers;program testing;quality assurance;software architecture;software quality;specification languages;SDL-based architectural design models;automatic code generation;n-step message transfer;quality assurance;sender-receiver round-trip;simulation-based black-box testing strategies;specification and description language;white-box testing strategies;Computational modeling;Computer bugs;Industries;Software;Telecommunications;Testing;Unified modeling language;SDL (Specification and Description Language);architectural design models;coverage testing;white-box testing}, 
doi={10.1109/SSIRI.2011.29},}

@incollection{Mlynarski2012MBT_AchivementsAndChallenges,
title = "Model-Based Testing: Achievements and Future Challenges",
editor = "Ali Hurson and Atif Memon",
booktitle = "",
publisher = "Elsevier",
year = "2012",
volume = "86",
pages = "1 - 39",
series = "Advances in Computers",
issn = "0065-2458",
doi = "10.1016/B978-0-12-396535-6.00001-6",
url = "http://www.sciencedirect.com/science/article/pii/B9780123965356000016",
author = "Michael Mlynarski and Baris Güldali and Stephan Weißleder and Gregor Engels",
abstract = "Software systems are part of our everyday life and they become more complex day by day. The ever-growing complexity of software and high quality requirements pose tough challenges to quality assurance.

The quality of a software system can be measured by software testing. However, if manually done, testing is a time-consuming and error-prone task. Especially test case design and test execution are the most cost-intensive activities in testing. In the previous 20&#xa0;years, many automation tools have been introduced for automating test execution by using test scripts. However, the effort for creating and maintaining test scripts remains. Model-based testing (MBT) aims at improving this part by systematizing and automating the test case design. Thereby, test cases or automatable test scripts can be generated systematically from test models.

MBT is already known for several years, but it currently gains a great momentum due to advanced tool support and innovative methodological approaches. This chapter aims at giving an overview of MBT and summarizes recent achievements in MBT. Experiences with using the MBT approach are illustrated by reporting on some success stories. Finally, open issues and future research challenges are discussed."
}

@inproceedings{Wu:2003:UIT:UMLBasedIntegrationTestingforComponentBasedSoftware,
 author = {Wu, Ye and Chen, Mei-Hwa and Offutt, Jeff},
 title = {UML-Based Integration Testing for Component-Based Software},
 booktitle = {Proceedings of the Second International Conference on COTS-Based Software Systems},
 series = {ICCBSS '03},
 year = {2003},
 isbn = {3-540-00562-5},
 pages = {251--260},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=646853.707766},
 acmid = {707766},
 publisher = {Springer-Verlag},
 address = {London, UK, UK}
} 

@article{Patel12TestCaseFormationUsigUMLActivityDiagram,
	author = {Puneet Patel and Nitin Patil},
	title = {Test case formation using UML activity diagram},
	journal = {World Journal of Science and Technology},
	volume = {2},
	number = {3},
	year = {2012},
	keywords = {UML Activity Diagram},
	abstract = {<p class="MsoNormal" style="text-align: justify;">The automated test cases generation is viewed as a guarantee to carry out effective and maintainable software testing. Model-based test case generation methodology becomes an obvious choice in software industries and is the focus of this work. Activity diagram is used for business modeling, control and object flow modeling, complex operation modeling etc. Main advantage of this model is its simplicity and ease of understanding the flow of logic of the system. However, finding test information from activity diagram is a formidable task. Here an approach for generating test cases using UML activity diagram. Also a coverage criterion called activity path coverage criterion is considered in this work. Generated test suite following activity path coverage criterion aims to cover more faults like synchronization faults, loop faults.</p>},
	issn = {2231-2587},
	url = {http://worldjournalofscience.com/index.php/wjst/article/view/13160}
}
@ARTICLE{DeMillo91constraint-basedautomaticTestDataGeneration,
    author = {Richard A. DeMillo and A. Jefferson Offutt},
    title = {Constraint-Based Automatic Test Data Generation},
    journal = {IEEE TRANSACTIONS ON SOFTWARE ENGINEERING},
    year = {1991},
    volume = {17},
    number = {9},
    pages = {900--910}
}
@MISC{Ali_modeltransformations,
    author = {S. Ali and H. Hemmati and N. E. Holt and E. Arisholm and L. C. Briand},
    title = {Model Transformations as a Strategy to Automate Model-Based Testing: A Tool and Industrial Case Studies },
    year = {}
}

@Article{COUENNE,
  author       = "P. Belotti and J. Lee and L. Liberti and F. Margot and
                  A. W{\"a}chter",
  title        = "Branching and bounds tightening techniques for
                  non-convex {MINLP}",
  journal      = "Optimization Methods and Software",
  volume       = "24",
  number       = "4-5",
  pages        = "597--634",
  year         = "2009"
}

@Misc{gecode,
  author = "{Gecode Team}",
  title = "Gecode: Generic Constraint Development Environment",
  year = {2006},
  note = {Available from \texttt{http://www.gecode.org}},
}

@book{AMPL,
    author = {Fourer, Robert and Gay, David M. and Kernighan, Brian W.},
    day = {12},
    howpublished = {Hardcover},
    isbn = {0534388094},
    month = nov,
    posted-at = {2009-07-25 22:24:02},
    priority = {2},
    publisher = {{Duxbury Press}},
    title = {{AMPL: A Modeling Language for Mathematical Programming}},
    url = {http://www.worldcat.org/isbn/0534388094},
    year = {2002}
}
@phdthesis{ParTeG,
  author    = {Stephan Wei{\ss}leder},
  school    = {Humboldt University Berlin},
  title     = {Test models and coverage criteria for automatic model-based
               test generation with UML state machines},
  year      = {2010},
  pages     = {1-259},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{weissleder2010parteg,
  title={ParTeG-A Model-Based Testing Tool},
  author={Wei{\ss}leder, Stephan and Sokenou, Dehla},
  journal={Softwaretechnik-Trends},
  volume={30},
  number={2},
  year={2010}
}

@misc{cplex,
    citeulike-article-id = {4455763},
    url = {http://www.ilog.com/products/cplex/},
    keywords = {cplex, lp},
    title = {ILOG CPLEX}
}
@misc{cplex2,
    url = {http://www.ilog.com/products/cplex/},
    keywords = {cplex, lp},
    title = {ILOG CPLEX 11.0},
    year = {2007}
}

@inproceedings{ilogcp,
 author = {Laborie, Philippe},
 title = {IBM ILOG CP Optimizer for Detailed Scheduling Illustrated on Three Problems},
 booktitle = {Proceedings of the 6th International Conference on Integration of AI and OR Techniques in Constraint Programming for Combinatorial Optimization Problems},
 series = {CPAIOR '09},
 year = {2009},
 isbn = {978-3-642-01928-9},
 location = {Pittsburgh, PA},
 pages = {148--162},
 numpages = {15},
 url = {http://public.dhe.ibm.com/common/ssi/ecm/en/wsw14077usen/WSW14077USEN.PDF},
 doi = {10.1007/978-3-642-01929-6_12},
 acmid = {1560593},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {Constraint Programming, Scheduling}
} 

@manual{lpsolve,
    author = {Berkelaar, Michel and Eikland, Kjell and Notebaert, Peter},
    citeulike-article-id = {3812392},
    keywords = {linear-optimisation, mdb-manuscript-1, mdb-thesis, software},
    posted-at = {2008-12-19 18:14:21},
    priority = {0},
    title = {{lpsolve : Open source (Mixed-Integer) Linear Programming system}}
}

@misc{minos,
    author = "Murtagh, Bruce A. and Saunders, Michael A. and Murray, Walter and Gill, Philip E. and Raman, Ramesh and Kalvelagen, Erwin",
    url = "http://tomopt.com/docs/minosref/tomlab_minos.php",
    title = "MINOS: A Solver for Large-Scale Nonlinear Optimization Problems"
}

@book{EMF,
 author = {Steinberg, David and Budinsky, Frank and Paternostro, Marcelo and Merks, Ed},
 title = {EMF: Eclipse Modeling Framework 2.0},
 year = {2009},
 isbn = {0321331885},
 edition = {2nd},
 publisher = {Addison-Wesley Professional},
}

@MISC{wiki:CSP,
   author = {Wikipedia},
   title = {Constraint satisfaction problem --- Wikipedia{,} The Free Encyclopedia},
   year = {2013},
   url = "\url{http://en.wikipedia.org/w/index.php?title=Constraint_satisfaction_problem&oldid=557314364}",
   note = "[Online; accessed 30-September-2013]"
}

@MISC{Eiben97constraintsatisfaction,
    author = {A.E. Eiben and Zs. Ruttkay},
    title = {Constraint Satisfaction Problems},
    year = {1997}
}

@book{dantzig63Simplex,
    author = {Dantzig, George},
    keywords = {linear, programming, simplex},
    publisher = {{Princeton University Press}},
    title = {{Linear Programming and Extensions}},
    year = {1963}
}

@book{Boyd04ConOpt,
 author = {Boyd, Stephen and Vandenberghe, Lieven},
 title = {Convex Optimization},
 year = {2004},
 isbn = {0521833787},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA}
} 

@TechReport{UML23Superstructure,
author = {},
title = {OMG Unified Modeling Language\texttrademark (OMG UML),Superstructure},
institution = {Object Management Group},
year = {2010},
month = {May},
url = {http://www.omg.org/spec/UML/2.3/}
}
@TechReport{UML23Infrastructure,
author = {},
title = {OMG Unified Modeling LanguageTM (OMG UML),Superstructure},
institution = {Object Management Group},
year = {2010},
month = {May},
url = {http://www.omg.org/spec/UML/2.3/}
}

@article{DPLL,
 author = {Davis, Martin and Logemann, George and Loveland, Donald},
 title = {A machine program for theorem-proving},
 journal = {Commun. ACM},
 issue_date = {July 1962},
 volume = {5},
 number = {7},
 month = jul,
 year = {1962},
 issn = {0001-0782},
 pages = {394--397},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/368273.368557},
 doi = {10.1145/368273.368557},
 acmid = {368557},
 publisher = {ACM},
 address = {New York, NY, USA}
} 

@inproceedings{cvc,
 author = {Barrett, Clark and Conway, Christopher L. and Deters, Morgan and Hadarean, Liana and Jovanovi\'{c}, Dejan and King,  Tim and Reynolds, Andrew and Tinelli, Cesare},
 title = {CVC4},
 booktitle = {Proceedings of the 23rd international conference on Computer aided verification},
 series = {CAV'11},
 year = {2011},
 isbn = {978-3-642-22109-5},
 location = {Snowbird, UT},
 pages = {171--177},
 numpages = {7},
 url = {http://dl.acm.org/citation.cfm?id=2032305.2032319},
 acmid = {2032319},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg}
} 

@article{krieger2008executingUnderspecifiedOCL,
  title={Executing underspecified OCL operation contracts with a SAT solver},
  author={Krieger, Matthias P and Knapp, Alexander},
  journal={Electronic Communications of the EASST},
  volume={15},
  year={2008}
}

@article{brucker2012theoremProverBasedTesting,
  title={On theorem prover-based testing},
  author={Brucker, Achim D and Wolff, Burkhart},
  journal={Formal Aspects of Computing},
  pages={1--39},
  year={2012},
  publisher={Springer}
}