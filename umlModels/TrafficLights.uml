<?xml version="1.0" encoding="UTF-8"?>
<uml:Model xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xmi:id="_43442142-fbf2-11d2-a53d-00104bb05af8" name="Traffic Lights">
  <packagedElement xmi:type="uml:Package" xmi:id="_fda68d40-8346-400c-bf40-70f24c80465d" clientDependency="_839e6351-53f9-4aa4-b1f0-4e9b708bf7e2 _bdb7ba62-7fc4-4b0b-9223-eb08a3221e86" name="Hardware">
    <packagedElement xmi:type="uml:Class" xmi:id="_675ad05c-9358-46fd-bf5e-8532f2aa98be" name="Button"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_079b34be-c388-48a0-92a7-d1fc3b44c9c2" name="ControlSys"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_2b9d960c-b764-4787-8bd2-b29ca18c24cf" name="Key"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_e294f6ab-ec91-4a6a-8cec-6f17dff612ea" name="Light"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_50edb9e9-8c85-4af9-971f-98e036b62b28" name="Sign"/>
    <packagedElement xmi:type="uml:Class" xmi:id="_5b373c97-01f7-44bc-8658-918e773b00f9" name="Traffic Lights System">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d" name="Control System" visibility="private" type="_079b34be-c388-48a0-92a7-d1fc3b44c9c2" aggregation="composite" association="_8957f04d-83dd-4a31-9ab9-3e40b496c375"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_b3de1e03-1fd5-445b-bebf-32d36e88a9f7" name="Red Light" visibility="private" type="_e294f6ab-ec91-4a6a-8cec-6f17dff612ea" aggregation="composite" association="_b58eee3c-c62d-4fd2-bcf4-142e602c929b"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9fd2529d-ed09-42de-8b29-ec6222d7c583" name="Amber Light" visibility="private" type="_e294f6ab-ec91-4a6a-8cec-6f17dff612ea" aggregation="composite" association="_9e8d5635-43f6-4cf5-977c-2a2ef49c3026"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a978d67c-d307-4a59-adfd-26f310c8045a" name="Green Light" visibility="private" type="_e294f6ab-ec91-4a6a-8cec-6f17dff612ea" aggregation="composite" association="_d05d479f-005e-4438-a37f-9566c653f1b4"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2b8b1558-6ff4-4e99-974d-6e2ae657e380" name="Wait Sign" visibility="private" type="_50edb9e9-8c85-4af9-971f-98e036b62b28" aggregation="composite" association="_4a48538f-3e54-4bd4-966f-9a42b10e4b24"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1dcfe32b-8f15-4e80-b1de-34d9c0b80a3b" name="Wait Button" visibility="private" type="_675ad05c-9358-46fd-bf5e-8532f2aa98be" aggregation="composite" association="_5a512efd-a1a8-45a2-b5a7-684d995c9ded"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e23cdb8f-f9d4-48e1-bc8a-0a5e2b73768a" name="Activation Key" visibility="private" type="_2b9d960c-b764-4787-8bd2-b29ca18c24cf" aggregation="composite" association="_06791f42-0d2a-48f7-ae2a-2d108e2e24f3"/>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_cebb6114-df6a-4e55-8f1e-a4bb7bfe8e78" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_808f9765-8c8e-42cb-a806-d158fb79adee" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_d509026c-8bb2-4328-b6dd-1b7f80dc5ddb" role="_1dcfe32b-8f15-4e80-b1de-34d9c0b80a3b"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_cea21cf7-1d60-4baa-8e31-9bf0f331a4bb" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_22810d01-7028-4cea-8d70-5c19152bd037" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_bc910088-6e58-498c-a811-0ba0d81126e3" role="_2b8b1558-6ff4-4e99-974d-6e2ae657e380"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_ddcd589a-8458-4eb7-b2aa-e4b103085cae" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_e8f51caa-d1aa-4691-a86c-27f7be5c9a0b" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_ea2caf89-3369-4576-a6c2-825befeaaced" role="_a978d67c-d307-4a59-adfd-26f310c8045a"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_83694d5e-8dca-4f97-bc1f-0d149ae0102c" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_63edc295-653b-495e-b077-df29cc75a355" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_bc3c4f9e-3f96-446a-a4f9-ab6c167f8ba8" role="_9fd2529d-ed09-42de-8b29-ec6222d7c583"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_e1ef02e7-13a5-4859-ad0f-9a9e5187a0d7" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_84706826-19e8-473e-9ae0-45a6ea6e9cd6" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_8f3271a8-da36-4499-a554-b5da90678fa4" role="_b3de1e03-1fd5-445b-bebf-32d36e88a9f7"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_a9c93ba0-f44f-45cf-8ffa-dbffca766896" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_ee236a14-316d-4b69-9dac-efc1fb39aa00" role="_e23cdb8f-f9d4-48e1-bc8a-0a5e2b73768a"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_cde9a3c3-b232-49fd-b03a-3fe4e74e48dc" role="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_481aed7a-0e32-4913-b670-084ecf4d1a6d" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_983b8d02-01a1-45e5-85df-2ece30e078e6"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_d25bf0be-5117-4b98-8ca2-4c85fb02e19a" role="_1dcfe32b-8f15-4e80-b1de-34d9c0b80a3b"/>
      </ownedConnector>
      <ownedConnector xmi:type="uml:Connector" xmi:id="_a841b492-c9eb-44f0-a993-eaf4cb8e597f" name="Associates">
        <end xmi:type="uml:ConnectorEnd" xmi:id="_3cb8de20-01ab-4ac4-8771-3d529979527b"/>
        <end xmi:type="uml:ConnectorEnd" xmi:id="_f68eb1e4-5b99-4ec2-9d23-09dcd8601c7e" role="_e23cdb8f-f9d4-48e1-bc8a-0a5e2b73768a"/>
      </ownedConnector>
    </packagedElement>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_5b638f1e-2e26-11d3-a571-00104bb05af8" name="Activate"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_0018e605-fd6b-11d2-a540-00104bb05af8" name="ButtonPress"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_4344218b-fbf2-11d2-a53d-00104bb05af8" name="Deactivate"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f35-968a-11d3-bd42-b8ef932a583f" name="Off_A"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f60-968a-11d3-bd42-b8ef932a583f" name="Off_G"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f5b-968a-11d3-bd42-b8ef932a583f" name="Off_R"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f64-968a-11d3-bd42-b8ef932a583f" name="Off_W"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f33-968a-11d3-bd42-b8ef932a583f" name="On_A"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f58-968a-11d3-bd42-b8ef932a583f" name="On_G"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f59-968a-11d3-bd42-b8ef932a583f" name="On_R"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f62-968a-11d3-bd42-b8ef932a583f" name="On_W"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f9c-968a-11d3-bd42-b8ef932a583f" name="Press Wait"/>
    <packagedElement xmi:type="uml:SignalEvent" xmi:id="_53641f5d-968a-11d3-bd42-b8ef932a583f" name="Turn Key"/>
    <packagedElement xmi:type="uml:Association" xmi:id="_d05d479f-005e-4438-a37f-9566c653f1b4" memberEnd="_bc6907b0-cad4-413d-b4c3-991531d2d08c _a978d67c-d307-4a59-adfd-26f310c8045a">
      <ownedEnd xmi:type="uml:Property" xmi:id="_bc6907b0-cad4-413d-b4c3-991531d2d08c" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_d05d479f-005e-4438-a37f-9566c653f1b4"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_8957f04d-83dd-4a31-9ab9-3e40b496c375" memberEnd="_9f790e41-3ff5-4d76-ac30-1e09d150507d _4a4c95b2-39ad-48e3-8be0-cc98255dc76d">
      <ownedEnd xmi:type="uml:Property" xmi:id="_9f790e41-3ff5-4d76-ac30-1e09d150507d" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_8957f04d-83dd-4a31-9ab9-3e40b496c375"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_5a512efd-a1a8-45a2-b5a7-684d995c9ded" memberEnd="_bf0b3608-edb3-4dfc-894a-43b5ef456cfd _1dcfe32b-8f15-4e80-b1de-34d9c0b80a3b">
      <ownedEnd xmi:type="uml:Property" xmi:id="_bf0b3608-edb3-4dfc-894a-43b5ef456cfd" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_5a512efd-a1a8-45a2-b5a7-684d995c9ded"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_06791f42-0d2a-48f7-ae2a-2d108e2e24f3" memberEnd="_7f9658a2-420c-4ad9-af5d-b49818aee3d2 _e23cdb8f-f9d4-48e1-bc8a-0a5e2b73768a">
      <ownedEnd xmi:type="uml:Property" xmi:id="_7f9658a2-420c-4ad9-af5d-b49818aee3d2" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_06791f42-0d2a-48f7-ae2a-2d108e2e24f3"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_9e8d5635-43f6-4cf5-977c-2a2ef49c3026" memberEnd="_99c8233e-f045-4ce7-ba45-e9582114d66d _9fd2529d-ed09-42de-8b29-ec6222d7c583">
      <ownedEnd xmi:type="uml:Property" xmi:id="_99c8233e-f045-4ce7-ba45-e9582114d66d" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_9e8d5635-43f6-4cf5-977c-2a2ef49c3026"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4a48538f-3e54-4bd4-966f-9a42b10e4b24" memberEnd="_9baf0383-bd69-4341-848b-430d27bce97f _2b8b1558-6ff4-4e99-974d-6e2ae657e380">
      <ownedEnd xmi:type="uml:Property" xmi:id="_9baf0383-bd69-4341-848b-430d27bce97f" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_4a48538f-3e54-4bd4-966f-9a42b10e4b24"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_b58eee3c-c62d-4fd2-bcf4-142e602c929b" memberEnd="_8620f92e-4796-44c3-99af-ebc466a58f9f _b3de1e03-1fd5-445b-bebf-32d36e88a9f7">
      <ownedEnd xmi:type="uml:Property" xmi:id="_8620f92e-4796-44c3-99af-ebc466a58f9f" visibility="private" type="_5b373c97-01f7-44bc-8658-918e773b00f9" association="_b58eee3c-c62d-4fd2-bcf4-142e602c929b"/>
    </packagedElement>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_f6015edc-3307-446d-86ba-c40cc23f638fdata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_f6015edc-3307-446d-86ba-c40cc23f638f" name="IO Flow" conveyed="_f6015edc-3307-446d-86ba-c40cc23f638fdata" realizingConnector="_a9c93ba0-f44f-45cf-8ffa-dbffca766896"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_45af4175-6891-4dd1-8db3-38de546b9471data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_45af4175-6891-4dd1-8db3-38de546b9471" name="IO Flow" conveyed="_45af4175-6891-4dd1-8db3-38de546b9471data" realizingConnector="_a9c93ba0-f44f-45cf-8ffa-dbffca766896"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_b6d60353-c08e-4177-9c6e-72774d5a2f2edata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_b6d60353-c08e-4177-9c6e-72774d5a2f2e" name="IO Flow" conveyed="_b6d60353-c08e-4177-9c6e-72774d5a2f2edata" realizingConnector="_cea21cf7-1d60-4baa-8e31-9bf0f331a4bb"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_d223c111-3d99-4aa1-bfb5-7b6f258cd73cdata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_d223c111-3d99-4aa1-bfb5-7b6f258cd73c" name="IO Flow" conveyed="_d223c111-3d99-4aa1-bfb5-7b6f258cd73cdata" realizingConnector="_cea21cf7-1d60-4baa-8e31-9bf0f331a4bb"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_1beb11a0-9103-4561-b3f0-00cad11bd53ddata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_1beb11a0-9103-4561-b3f0-00cad11bd53d" name="IO Flow" conveyed="_1beb11a0-9103-4561-b3f0-00cad11bd53ddata" realizingConnector="_ddcd589a-8458-4eb7-b2aa-e4b103085cae"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_2ea467af-6ea2-4505-8b57-db3501464264data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_2ea467af-6ea2-4505-8b57-db3501464264" name="IO Flow" conveyed="_2ea467af-6ea2-4505-8b57-db3501464264data" realizingConnector="_ddcd589a-8458-4eb7-b2aa-e4b103085cae"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_a217f7c6-c4bf-400a-95af-60252be742a6data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_a217f7c6-c4bf-400a-95af-60252be742a6" name="IO Flow" conveyed="_a217f7c6-c4bf-400a-95af-60252be742a6data" realizingConnector="_83694d5e-8dca-4f97-bc1f-0d149ae0102c"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_a35cfa99-6945-42c4-88ee-9327f2b9059ddata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_a35cfa99-6945-42c4-88ee-9327f2b9059d" name="IO Flow" conveyed="_a35cfa99-6945-42c4-88ee-9327f2b9059ddata" realizingConnector="_83694d5e-8dca-4f97-bc1f-0d149ae0102c"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_363206eb-b3c0-4e24-beb2-a36a6fcca156data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_363206eb-b3c0-4e24-beb2-a36a6fcca156" name="IO Flow" conveyed="_363206eb-b3c0-4e24-beb2-a36a6fcca156data" realizingConnector="_e1ef02e7-13a5-4859-ad0f-9a9e5187a0d7"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_08b82e94-cd6f-40f6-bfa4-86acddd027a5data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_08b82e94-cd6f-40f6-bfa4-86acddd027a5" name="IO Flow" conveyed="_08b82e94-cd6f-40f6-bfa4-86acddd027a5data" realizingConnector="_e1ef02e7-13a5-4859-ad0f-9a9e5187a0d7"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_[e9b5b7b9-1e36-4191-920c-4c0282e21357]data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_[e9b5b7b9-1e36-4191-920c-4c0282e21357]" name="IO Flow" conveyed="_[e9b5b7b9-1e36-4191-920c-4c0282e21357]data" realizingConnector="_cebb6114-df6a-4e55-8f1e-a4bb7bfe8e78"/>
    <packagedElement xmi:type="uml:Dependency" xmi:id="_839e6351-53f9-4aa4-b1f0-4e9b708bf7e2" client="_fda68d40-8346-400c-bf40-70f24c80465d" supplier="_5a5f82b1-f42d-4849-8efa-f4bdfe82c3be"/>
    <packagedElement xmi:type="uml:Dependency" xmi:id="_bdb7ba62-7fc4-4b0b-9223-eb08a3221e86" client="_fda68d40-8346-400c-bf40-70f24c80465d" supplier="_80a27e73-0121-436a-abf7-1e01ebb33c7e"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_80a27e73-0121-436a-abf7-1e01ebb33c7e" clientDependency="_0fac6b3f-8afe-463c-a0d2-4c2553218c85" name="Software">
    <packagedElement xmi:type="uml:Class" xmi:id="_43442151-fbf2-11d2-a53d-00104bb05af8" name="Controller">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_0018e606-fd6b-11d2-a540-00104bb05af8" name="ped_wait" visibility="private" type="_4344214c-fbf2-11d2-a53d-00104bb05af8" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_98368725-fe2c-11d2-a541-00104bb05af8" name="flashes" visibility="private" type="_4344214c-fbf2-11d2-a53d-00104bb05af8" aggregation="composite"/>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_43442190-fbf2-11d2-a53d-00104bb05af8" visibility="private" type="_4344218c-fbf2-11d2-a53d-00104bb05af8" aggregation="composite" association="_4344218e-fbf2-11d2-a53d-00104bb05af8"/>
      <ownedBehavior xmi:type="uml:StateMachine" xmi:id="_15addf51-4e6b-44f3-8842-6d79672511af" name="Controller">
        <region xmi:type="uml:Region" xmi:id="_15addf51-4e6b-44f3-8842-6d79672511afregion">
          <transition xmi:type="uml:Transition" xmi:id="_43442169-fbf2-11d2-a53d-00104bb05af8" source="_43442167-fbf2-11d2-a53d-00104bb05af8" target="_43442165-fbf2-11d2-a53d-00104bb05af8"/>
          <transition xmi:type="uml:Transition" xmi:id="_5b638f19-2e26-11d3-a571-00104bb05af8" source="_5b638f17-2e26-11d3-a571-00104bb05af8" target="_43442165-fbf2-11d2-a53d-00104bb05af8">
            <trigger xmi:type="uml:Trigger" xmi:id="_5b638f1b-2e26-11d3-a571-00104bb05af8trigger" event="_5b638f1e-2e26-11d3-a571-00104bb05af8"/>
          </transition>
          <transition xmi:type="uml:Transition" xmi:id="_a45ea744-fe1c-11d2-a541-00104bb05af8" source="_43442165-fbf2-11d2-a53d-00104bb05af8" target="_5b638f17-2e26-11d3-a571-00104bb05af8">
            <trigger xmi:type="uml:Trigger" xmi:id="_a45ea746-fe1c-11d2-a541-00104bb05af8trigger" event="_4344218b-fbf2-11d2-a53d-00104bb05af8"/>
          </transition>
          <transition xmi:type="uml:Transition" xmi:id="_5b638f12-2e26-11d3-a571-00104bb05af8" source="_43442165-fbf2-11d2-a53d-00104bb05af8" target="_a45ea742-fe1c-11d2-a541-00104bb05af8">
            <trigger xmi:type="uml:Trigger" xmi:id="_5b638f14-2e26-11d3-a571-00104bb05af8trigger"/>
          </transition>
          <transition xmi:type="uml:Transition" xmi:id="_0018e602-fd6b-11d2-a540-00104bb05af8" kind="internal" source="_43442165-fbf2-11d2-a53d-00104bb05af8" target="_43442165-fbf2-11d2-a53d-00104bb05af8">
            <effect xmi:type="uml:OpaqueBehavior" xmi:id="_0018e602-fd6b-11d2-a540-00104bb05af8body" name="">
              <body>ped_wait=1;&#xD;Lights::Wait(1);</body>
            </effect>
            <trigger xmi:type="uml:Trigger" xmi:id="_0018e602-fd6b-11d2-a540-00104bb05af8trigger" event="_0018e605-fd6b-11d2-a540-00104bb05af8"/>
          </transition>
          <subvertex xmi:type="uml:FinalState" xmi:id="_a45ea742-fe1c-11d2-a541-00104bb05af8" name="Final"/>
          <subvertex xmi:type="uml:Pseudostate" xmi:id="_43442167-fbf2-11d2-a53d-00104bb05af8" name="Initial1"/>
          <subvertex xmi:type="uml:State" xmi:id="_5b638f17-2e26-11d3-a571-00104bb05af8" name="Off"/>
          <subvertex xmi:type="uml:State" xmi:id="_43442165-fbf2-11d2-a53d-00104bb05af8" name="Running">
            <entry xmi:type="uml:Activity" xmi:id="_f6e23ed2-fd7b-11d2-a540-00104bb05af8Activ" name="ped_wait=0;"/>
            <region xmi:type="uml:Region" xmi:id="_43442165-fbf2-11d2-a53d-00104bb05af8region">
              <transition xmi:type="uml:Transition" xmi:id="_4344217d-fbf2-11d2-a53d-00104bb05af8" name="" source="_43442163-fbf2-11d2-a53d-00104bb05af8" target="_43442158-fbf2-11d2-a53d-00104bb05af8">
                <trigger xmi:type="uml:Trigger" xmi:id="_4344217f-fbf2-11d2-a53d-00104bb05af8trigger" event="_43442181-fbf2-11d2-a53d-00104bb05af8"/>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_0018e622-fd6b-11d2-a540-00104bb05af8" name="" source="_0018e609-fd6b-11d2-a540-00104bb05af8" target="_43442161-fbf2-11d2-a53d-00104bb05af8">
                <trigger xmi:type="uml:Trigger" xmi:id="_trigger"/>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_43442178-fbf2-11d2-a53d-00104bb05af8" name="" source="_43442161-fbf2-11d2-a53d-00104bb05af8" target="_43442163-fbf2-11d2-a53d-00104bb05af8">
                <trigger xmi:type="uml:Trigger" xmi:id="_4344217a-fbf2-11d2-a53d-00104bb05af8trigger" event="_4344217c-fbf2-11d2-a53d-00104bb05af8"/>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_4344215a-fbf2-11d2-a53d-00104bb05af8" source="_43442156-fbf2-11d2-a53d-00104bb05af8" target="_43442158-fbf2-11d2-a53d-00104bb05af8"/>
              <transition xmi:type="uml:Transition" xmi:id="_43442173-fbf2-11d2-a53d-00104bb05af8" source="_4344215f-fbf2-11d2-a53d-00104bb05af8" target="_43442161-fbf2-11d2-a53d-00104bb05af8">
                <trigger xmi:type="uml:Trigger" xmi:id="_43442175-fbf2-11d2-a53d-00104bb05af8trigger" event="_43442177-fbf2-11d2-a53d-00104bb05af8"/>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_b1665ae9-fe27-11d2-a541-00104bb05af8" guard="_b1665aec-fe27-11d2-a541-00104bb05af8guard" source="_b1665ae2-fe27-11d2-a541-00104bb05af8" target="_0018e609-fd6b-11d2-a540-00104bb05af8">
                <ownedRule xmi:type="uml:Constraint" xmi:id="_b1665aec-fe27-11d2-a541-00104bb05af8guard" constrainedElement="_b1665ae9-fe27-11d2-a541-00104bb05af8">
                  <specification xmi:type="uml:OpaqueExpression" xmi:id="_b1665aec-fe27-11d2-a541-00104bb05af8specification">
                    <body>else</body>
                  </specification>
                </ownedRule>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_b1665ae4-fe27-11d2-a541-00104bb05af8" guard="_b1665ae7-fe27-11d2-a541-00104bb05af8guard" source="_b1665ae2-fe27-11d2-a541-00104bb05af8" target="_4344215f-fbf2-11d2-a53d-00104bb05af8">
                <ownedRule xmi:type="uml:Constraint" xmi:id="_b1665ae7-fe27-11d2-a541-00104bb05af8guard" constrainedElement="_b1665ae4-fe27-11d2-a541-00104bb05af8">
                  <specification xmi:type="uml:OpaqueExpression" xmi:id="_b1665ae7-fe27-11d2-a541-00104bb05af8specification">
                    <body>ped_wait==0</body>
                  </specification>
                </ownedRule>
              </transition>
              <transition xmi:type="uml:Transition" xmi:id="_0018e61d-fd6b-11d2-a540-00104bb05af8" source="_43442158-fbf2-11d2-a53d-00104bb05af8" target="_b1665ae2-fe27-11d2-a541-00104bb05af8">
                <trigger xmi:type="uml:Trigger" xmi:id="_0018e61f-fd6b-11d2-a540-00104bb05af8trigger" name="" event="_0018e621-fd6b-11d2-a540-00104bb05af8"/>
              </transition>
              <subvertex xmi:type="uml:State" xmi:id="_43442163-fbf2-11d2-a53d-00104bb05af8" name="Caution">
                <entry xmi:type="uml:Activity" xmi:id="_434421a4-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Amber(1);"/>
                <exit xmi:type="uml:Activity" xmi:id="_434421a1-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Amber(0);"/>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_0018e609-fd6b-11d2-a540-00104bb05af8" name="Crossing">
                <entry xmi:type="uml:Activity" xmi:id="_0018e617-fd6b-11d2-a540-00104bb05af8Activ" name="Lights::Red(0);&#xD;ped_wait=0;"/>
                <region xmi:type="uml:Region" xmi:id="_0018e609-fd6b-11d2-a540-00104bb05af8region">
                  <transition xmi:type="uml:Transition" xmi:id="_b1665b15-fe27-11d2-a541-00104bb05af8" source="_b1665af5-fe27-11d2-a541-00104bb05af8" target="_b1665af3-fe27-11d2-a541-00104bb05af8">
                    <trigger xmi:type="uml:Trigger" xmi:id="_b1665b17-fe27-11d2-a541-00104bb05af8trigger" event="_b1665b19-fe27-11d2-a541-00104bb05af8"/>
                  </transition>
                  <transition xmi:type="uml:Transition" xmi:id="_b1665b06-fe27-11d2-a541-00104bb05af8" source="_b1665af3-fe27-11d2-a541-00104bb05af8" target="_b1665b04-fe27-11d2-a541-00104bb05af8">
                    <trigger xmi:type="uml:Trigger" xmi:id="_b1665b08-fe27-11d2-a541-00104bb05af8trigger" event="_b1665b0a-fe27-11d2-a541-00104bb05af8"/>
                  </transition>
                  <transition xmi:type="uml:Transition" xmi:id="_b1665af9-fe27-11d2-a541-00104bb05af8" source="_b1665af1-fe27-11d2-a541-00104bb05af8" target="_b1665af3-fe27-11d2-a541-00104bb05af8">
                    <effect xmi:type="uml:OpaqueBehavior" xmi:id="_b1665afb-fe27-11d2-a541-00104bb05af8body">
                      <body>flashes=0;</body>
                    </effect>
                  </transition>
                  <transition xmi:type="uml:Transition" xmi:id="_b1665b10-fe27-11d2-a541-00104bb05af8" guard="_b1665b13-fe27-11d2-a541-00104bb05af8guard" source="_b1665b04-fe27-11d2-a541-00104bb05af8" target="_b1665af7-fe27-11d2-a541-00104bb05af8">
                    <ownedRule xmi:type="uml:Constraint" xmi:id="_b1665b13-fe27-11d2-a541-00104bb05af8guard" constrainedElement="_b1665b10-fe27-11d2-a541-00104bb05af8">
                      <specification xmi:type="uml:OpaqueExpression" xmi:id="_b1665b13-fe27-11d2-a541-00104bb05af8specification">
                        <body>else</body>
                      </specification>
                    </ownedRule>
                  </transition>
                  <transition xmi:type="uml:Transition" xmi:id="_b1665b0b-fe27-11d2-a541-00104bb05af8" guard="_b1665b0e-fe27-11d2-a541-00104bb05af8guard" source="_b1665b04-fe27-11d2-a541-00104bb05af8" target="_b1665af5-fe27-11d2-a541-00104bb05af8">
                    <ownedRule xmi:type="uml:Constraint" xmi:id="_b1665b0e-fe27-11d2-a541-00104bb05af8guard" constrainedElement="_b1665b0b-fe27-11d2-a541-00104bb05af8">
                      <specification xmi:type="uml:OpaqueExpression" xmi:id="_b1665b0e-fe27-11d2-a541-00104bb05af8specification">
                        <body>flashes</body>
                        <body>&lt;</body>
                        <body>3</body>
                      </specification>
                    </ownedRule>
                    <effect xmi:type="uml:OpaqueBehavior" xmi:id="_b1665b0d-fe27-11d2-a541-00104bb05af8body">
                      <body>flashes++;</body>
                    </effect>
                  </transition>
                  <subvertex xmi:type="uml:FinalState" xmi:id="_b1665af7-fe27-11d2-a541-00104bb05af8" name="Final1"/>
                  <subvertex xmi:type="uml:State" xmi:id="_b1665af5-fe27-11d2-a541-00104bb05af8" name="FlashOff"/>
                  <subvertex xmi:type="uml:State" xmi:id="_b1665af3-fe27-11d2-a541-00104bb05af8" name="FlashOn">
                    <entry xmi:type="uml:Activity" xmi:id="_b1665afe-fe27-11d2-a541-00104bb05af8Activ" name="Lights::Amber(1);"/>
                    <exit xmi:type="uml:Activity" xmi:id="_98368722-fe2c-11d2-a541-00104bb05af8Activ" name="Lights::Amber(0);"/>
                  </subvertex>
                  <subvertex xmi:type="uml:Pseudostate" xmi:id="_b1665af1-fe27-11d2-a541-00104bb05af8" name="Initial2"/>
                  <subvertex xmi:type="uml:Pseudostate" xmi:id="_b1665b04-fe27-11d2-a541-00104bb05af8" name="State2" kind="junction"/>
                </region>
              </subvertex>
              <subvertex xmi:type="uml:State" xmi:id="_43442161-fbf2-11d2-a53d-00104bb05af8" name="Go">
                <entry xmi:type="uml:Activity" xmi:id="_434421a7-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Green(1);"/>
                <exit xmi:type="uml:Activity" xmi:id="_434421ad-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Green(0);"/>
              </subvertex>
              <subvertex xmi:type="uml:Pseudostate" xmi:id="_43442156-fbf2-11d2-a53d-00104bb05af8" name="Initial"/>
              <subvertex xmi:type="uml:State" xmi:id="_4344215f-fbf2-11d2-a53d-00104bb05af8" name="Ready">
                <entry xmi:type="uml:Activity" xmi:id="_4344219e-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Amber(1);"/>
                <exit xmi:type="uml:Activity" xmi:id="_434421aa-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Red(0);&#xD;Lights::Amber(0);"/>
              </subvertex>
              <subvertex xmi:type="uml:Pseudostate" xmi:id="_b1665ae2-fe27-11d2-a541-00104bb05af8" name="State1" kind="junction"/>
              <subvertex xmi:type="uml:State" xmi:id="_43442158-fbf2-11d2-a53d-00104bb05af8" name="Stop">
                <entry xmi:type="uml:Activity" xmi:id="_43442198-fbf2-11d2-a53d-00104bb05af8Activ" name="Lights::Red(1);&#xD;Lights::Wait(0);"/>
              </subvertex>
            </region>
          </subvertex>
        </region>
      </ownedBehavior>
    </packagedElement>
    <packagedElement xmi:type="uml:Class" xmi:id="_4344218c-fbf2-11d2-a53d-00104bb05af8" name="Lights">
      <ownedOperation xmi:type="uml:Operation" xmi:id="_43442192-fbf2-11d2-a53d-00104bb05af8op" name="Red" visibility="public" isStatic="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_43442195-fbf2-11d2-a53d-00104bb05af8" name="on" type="_4344214c-fbf2-11d2-a53d-00104bb05af8"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_43442193-fbf2-11d2-a53d-00104bb05af8op" name="Green" visibility="public" isStatic="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_43442196-fbf2-11d2-a53d-00104bb05af8" name="on" type="_4344214c-fbf2-11d2-a53d-00104bb05af8"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_43442194-fbf2-11d2-a53d-00104bb05af8op" name="Amber" visibility="public" isStatic="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_43442197-fbf2-11d2-a53d-00104bb05af8" name="on" type="_4344214c-fbf2-11d2-a53d-00104bb05af8"/>
      </ownedOperation>
      <ownedOperation xmi:type="uml:Operation" xmi:id="_bdb6f1a2-fd74-11d2-a540-00104bb05af8op" name="Wait" visibility="public" isStatic="true">
        <ownedParameter xmi:type="uml:Parameter" xmi:id="_bdb6f1a3-fd74-11d2-a540-00104bb05af8" name="on" type="_4344214c-fbf2-11d2-a53d-00104bb05af8"/>
      </ownedOperation>
    </packagedElement>
    <packagedElement xmi:type="uml:Association" xmi:id="_4344218e-fbf2-11d2-a53d-00104bb05af8" memberEnd="_4344218f-fbf2-11d2-a53d-00104bb05af8 _43442190-fbf2-11d2-a53d-00104bb05af8">
      <ownedEnd xmi:type="uml:Property" xmi:id="_4344218f-fbf2-11d2-a53d-00104bb05af8" visibility="private" type="_43442151-fbf2-11d2-a53d-00104bb05af8" association="_4344218e-fbf2-11d2-a53d-00104bb05af8"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Dependency" xmi:id="_0fac6b3f-8afe-463c-a0d2-4c2553218c85" client="_80a27e73-0121-436a-abf7-1e01ebb33c7e" supplier="_fda68d40-8346-400c-bf40-70f24c80465d"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_5a5f82b1-f42d-4849-8efa-f4bdfe82c3be" clientDependency="_80644921-639a-44e4-8985-cbfe4288e618" name="Usage">
    <packagedElement xmi:type="uml:Actor" xmi:id="_53641f3f-968a-11d3-bd42-b8ef932a583f" name="Maintenance Engineer"/>
    <packagedElement xmi:type="uml:Actor" xmi:id="_53641f41-968a-11d3-bd42-b8ef932a583f" name="Pedestrian"/>
    <packagedElement xmi:type="uml:UseCase" xmi:id="_53641f4e-968a-11d3-bd42-b8ef932a583f" name="Allow Pedestrian Crossing">
      <ownedBehavior xmi:type="uml:Interaction" xmi:id="_53641f8d-968a-11d3-bd42-b8ef932a583f" name="Allow Pedestrian Crossing">
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fad-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_R" covered="_6096e0ad-ded4-464b-8d4a-6e5d89ae955c"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fad-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_R" covered="_2209c679-3105-48e3-8f8c-ccf5df6ff797"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641faf-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_A" covered="_6096e0ad-ded4-464b-8d4a-6e5d89ae955c"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641faf-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_A" covered="_f5e9ef6f-f8d7-4de1-900a-591d0c956355"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fb0-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_A" covered="_6096e0ad-ded4-464b-8d4a-6e5d89ae955c"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fb0-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_A" covered="_f5e9ef6f-f8d7-4de1-900a-591d0c956355"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_f5e9ef6f-f8d7-4de1-900a-591d0c956355" name="Amber Light" represents="_9fd2529d-ed09-42de-8b29-ec6222d7c583" coveredBy="_53641faf-968a-11d3-bd42-b8ef932a583freceiveEvent _53641fb0-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_6096e0ad-ded4-464b-8d4a-6e5d89ae955c" name="Control System" represents="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d" coveredBy="_53641fad-968a-11d3-bd42-b8ef932a583fsendEvent _53641faf-968a-11d3-bd42-b8ef932a583fsendEvent _53641fb0-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_2209c679-3105-48e3-8f8c-ccf5df6ff797" name="Red Light" represents="_b3de1e03-1fd5-445b-bebf-32d36e88a9f7" coveredBy="_53641fad-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f90-968a-11d3-bd42-b8ef932a583f"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f8f-968a-11d3-bd42-b8ef932a583f"/>
        <message xmi:type="uml:Message" xmi:id="_53641fad-968a-11d3-bd42-b8ef932a583f" name="Off_R" receiveEvent="_53641fad-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641fad-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641faf-968a-11d3-bd42-b8ef932a583f" name="On_A" receiveEvent="_53641faf-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641faf-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641fb0-968a-11d3-bd42-b8ef932a583f" name="Off_A" receiveEvent="_53641fb0-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641fb0-968a-11d3-bd42-b8ef932a583fsendEvent"/>
      </ownedBehavior>
      <extend xmi:type="uml:Extend" xmi:id="_53641f4c-968a-11d3-bd42-b8ef932a583fucref" extendedCase="_53641f4c-968a-11d3-bd42-b8ef932a583f"/>
    </packagedElement>
    <packagedElement xmi:type="uml:UseCase" xmi:id="_53641f4c-968a-11d3-bd42-b8ef932a583f" name="Sequence Traffic Lights">
      <ownedBehavior xmi:type="uml:Interaction" xmi:id="_53641f52-968a-11d3-bd42-b8ef932a583f" name="Sequence Traffic Lights">
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f81-968a-11d3-bd42-b8ef932a583fsendEvent" name="Turn Key" covered="_53641f79-968a-11d3-bd42-b8ef932a583f"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f81-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Turn Key" covered="_65419bc8-1487-4086-ba77-bcbab1300eb0"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f82-968a-11d3-bd42-b8ef932a583fsendEvent" name="Activate" covered="_65419bc8-1487-4086-ba77-bcbab1300eb0"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f82-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Activate" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f9d-968a-11d3-bd42-b8ef932a583fsendEvent" name="Press Wait" covered="_53641f94-968a-11d3-bd42-b8ef932a583f"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f9d-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Press Wait" covered="_6bc35391-9985-4f2a-8d36-6d3b7f667fa5"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f9e-968a-11d3-bd42-b8ef932a583fsendEvent" name="ButtonPress" covered="_6bc35391-9985-4f2a-8d36-6d3b7f667fa5"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f9e-968a-11d3-bd42-b8ef932a583freceiveEvent" name="ButtonPress" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fa1-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_W" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fa1-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_W" covered="_4e1cb6f7-351e-4b3d-9c7d-5cc5b291c212"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f83-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_R" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f83-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_R" covered="_f0066c9f-f26d-48f9-8b7c-9a09a3807be1"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fb2-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_W" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641fb2-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_W" covered="_4e1cb6f7-351e-4b3d-9c7d-5cc5b291c212"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f85-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_A" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f85-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_A" covered="_1a4beced-c2af-4ca2-a50d-81f595d191fb"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f87-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_R" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f87-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_R" covered="_f0066c9f-f26d-48f9-8b7c-9a09a3807be1"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f88-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_A" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f88-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_A" covered="_1a4beced-c2af-4ca2-a50d-81f595d191fb"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f89-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_G" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f89-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_G" covered="_3df7effb-581c-419c-9bf0-84077cd314f6"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8a-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_G" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8a-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_G" covered="_3df7effb-581c-419c-9bf0-84077cd314f6"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8b-968a-11d3-bd42-b8ef932a583fsendEvent" name="On_A" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8b-968a-11d3-bd42-b8ef932a583freceiveEvent" name="On_A" covered="_1a4beced-c2af-4ca2-a50d-81f595d191fb"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8c-968a-11d3-bd42-b8ef932a583fsendEvent" name="Off_A" covered="_7ed82804-3474-4fe0-93fb-089b71235745"/>
        <fragment xmi:type="uml:MessageOccurrenceSpecification" xmi:id="_53641f8c-968a-11d3-bd42-b8ef932a583freceiveEvent" name="Off_A" covered="_1a4beced-c2af-4ca2-a50d-81f595d191fb"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_65419bc8-1487-4086-ba77-bcbab1300eb0" name="Activation Key" represents="_e23cdb8f-f9d4-48e1-bc8a-0a5e2b73768a" coveredBy="_53641f81-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f82-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_1a4beced-c2af-4ca2-a50d-81f595d191fb" name="Amber Light" represents="_9fd2529d-ed09-42de-8b29-ec6222d7c583" coveredBy="_53641f85-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f88-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f8b-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f8c-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_7ed82804-3474-4fe0-93fb-089b71235745" name="Control System" represents="_4a4c95b2-39ad-48e3-8be0-cc98255dc76d" coveredBy="_53641f82-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f9e-968a-11d3-bd42-b8ef932a583freceiveEvent _53641fa1-968a-11d3-bd42-b8ef932a583fsendEvent _53641f83-968a-11d3-bd42-b8ef932a583fsendEvent _53641fb2-968a-11d3-bd42-b8ef932a583fsendEvent _53641f85-968a-11d3-bd42-b8ef932a583fsendEvent _53641f87-968a-11d3-bd42-b8ef932a583fsendEvent _53641f88-968a-11d3-bd42-b8ef932a583fsendEvent _53641f89-968a-11d3-bd42-b8ef932a583fsendEvent _53641f8a-968a-11d3-bd42-b8ef932a583fsendEvent _53641f8b-968a-11d3-bd42-b8ef932a583fsendEvent _53641f8c-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_3df7effb-581c-419c-9bf0-84077cd314f6" name="Green Light" represents="_a978d67c-d307-4a59-adfd-26f310c8045a" coveredBy="_53641f89-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f8a-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_f0066c9f-f26d-48f9-8b7c-9a09a3807be1" name="Red Light" represents="_b3de1e03-1fd5-445b-bebf-32d36e88a9f7" coveredBy="_53641f83-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f87-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_6bc35391-9985-4f2a-8d36-6d3b7f667fa5" name="Wait Button" represents="_1dcfe32b-8f15-4e80-b1de-34d9c0b80a3b" coveredBy="_53641f9d-968a-11d3-bd42-b8ef932a583freceiveEvent _53641f9e-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_4e1cb6f7-351e-4b3d-9c7d-5cc5b291c212" name="Wait Sign" represents="_2b8b1558-6ff4-4e99-974d-6e2ae657e380" coveredBy="_53641fa1-968a-11d3-bd42-b8ef932a583freceiveEvent _53641fb2-968a-11d3-bd42-b8ef932a583freceiveEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f94-968a-11d3-bd42-b8ef932a583f" name="Pedestrian" coveredBy="_53641f9d-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f79-968a-11d3-bd42-b8ef932a583f" name="Maintenance Engineer" coveredBy="_53641f81-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f55-968a-11d3-bd42-b8ef932a583f"/>
        <lifeline xmi:type="uml:Lifeline" xmi:id="_53641f54-968a-11d3-bd42-b8ef932a583f"/>
        <message xmi:type="uml:Message" xmi:id="_53641f81-968a-11d3-bd42-b8ef932a583f" name="Turn Key" receiveEvent="_53641f81-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f81-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f82-968a-11d3-bd42-b8ef932a583f" name="Activate" receiveEvent="_53641f82-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f82-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f9d-968a-11d3-bd42-b8ef932a583f" name="Press Wait" receiveEvent="_53641f9d-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f9d-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f9e-968a-11d3-bd42-b8ef932a583f" name="ButtonPress" receiveEvent="_53641f9e-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f9e-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641fa1-968a-11d3-bd42-b8ef932a583f" name="On_W" receiveEvent="_53641fa1-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641fa1-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f83-968a-11d3-bd42-b8ef932a583f" name="On_R" receiveEvent="_53641f83-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f83-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641fb2-968a-11d3-bd42-b8ef932a583f" name="Off_W" receiveEvent="_53641fb2-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641fb2-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f85-968a-11d3-bd42-b8ef932a583f" name="On_A" receiveEvent="_53641f85-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f85-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f87-968a-11d3-bd42-b8ef932a583f" name="Off_R" receiveEvent="_53641f87-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f87-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f88-968a-11d3-bd42-b8ef932a583f" name="Off_A" receiveEvent="_53641f88-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f88-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f89-968a-11d3-bd42-b8ef932a583f" name="On_G" receiveEvent="_53641f89-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f89-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f8a-968a-11d3-bd42-b8ef932a583f" name="Off_G" receiveEvent="_53641f8a-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f8a-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f8b-968a-11d3-bd42-b8ef932a583f" name="On_A" receiveEvent="_53641f8b-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f8b-968a-11d3-bd42-b8ef932a583fsendEvent"/>
        <message xmi:type="uml:Message" xmi:id="_53641f8c-968a-11d3-bd42-b8ef932a583f" name="Off_A" receiveEvent="_53641f8c-968a-11d3-bd42-b8ef932a583freceiveEvent" sendEvent="_53641f8c-968a-11d3-bd42-b8ef932a583fsendEvent"/>
      </ownedBehavior>
    </packagedElement>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_015238f9-d16e-49ec-b029-dd2b38ed354ddata" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_015238f9-d16e-49ec-b029-dd2b38ed354d" name="IO Flow" conveyed="_015238f9-d16e-49ec-b029-dd2b38ed354ddata" informationSource="_53641f3f-968a-11d3-bd42-b8ef932a583f" realizingConnector="_a841b492-c9eb-44f0-a993-eaf4cb8e597f"/>
    <packagedElement xmi:type="uml:InformationItem" xmi:id="_856de5d0-0b4f-4ccf-8a93-fb4bf2973ac7data" isAbstract="true"/>
    <packagedElement xmi:type="uml:InformationFlow" xmi:id="_856de5d0-0b4f-4ccf-8a93-fb4bf2973ac7" name="IO Flow" conveyed="_856de5d0-0b4f-4ccf-8a93-fb4bf2973ac7data" informationSource="_53641f41-968a-11d3-bd42-b8ef932a583f" realizingConnector="_481aed7a-0e32-4913-b670-084ecf4d1a6d"/>
    <packagedElement xmi:type="uml:Dependency" xmi:id="_80644921-639a-44e4-8985-cbfe4288e618" client="_5a5f82b1-f42d-4849-8efa-f4bdfe82c3be" supplier="_fda68d40-8346-400c-bf40-70f24c80465d"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_6d68a6aa-76b5-47a0-a978-17c27256c833" name="System Architecture Profile">
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588" name="board">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyMetaType" name="base_Property" association="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassMetaType" name="base_Class" association="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_43781980-6acf-45e6-96f2-54649ca5bf43" name="baseAddress" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_85306a8a-cf27-4283-b226-5c3a45dbd211" name="task" visibility="public" aggregation="shared">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Task"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_85306a8a-cf27-4283-b226-5c3a45dbd211lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_85306a8a-cf27-4283-b226-5c3a45dbd211upperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_718c04ed-25b6-467f-be6c-d7ee3a6275d5" name="associatedPackage" visibility="public" aggregation="shared">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_718c04ed-25b6-467f-be6c-d7ee3a6275d5lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_718c04ed-25b6-467f-be6c-d7ee3a6275d5upperValue" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4" name="board IO device">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyMetaType" name="base_Property" association="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassMetaType" name="base_Class" association="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_768ca484-c119-413c-a05b-47984f08213d" name="portAddress" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9a34e3f3-fa97-4533-9f1b-e410f030de56" name="IRQ" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_585b0da0-0db1-4003-8574-5aea6f3b11d5" name="interruptLevel" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_552d7f54-124a-4d28-acfd-fd96a6e3cbca" name="memoryEnd" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_436a286f-3b82-46c0-8aeb-dcebdcfb7a33" name="memorySize" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_371a390e-b64d-4a67-af2a-27fffa91cbd7" name="memoryStart" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_65a16490-831d-4e92-8393-080ba88d484a" name="disk">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aPropertyMetaType" name="base_Property" association="_65a16490-831d-4e92-8393-080ba88d484aPropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aClassMetaType" name="base_Class" association="_65a16490-831d-4e92-8393-080ba88d484aClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_56a5bf55-e792-412f-9f91-de6efe6da00b" name="size" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2bc7c771-d672-45db-8f63-c11919228cc7" name="speed" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_ef4dde02-e607-4145-b55f-fd1401a53331" name="drop">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierMetaType" name="base_Classifier" association="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_7e50720f-3f86-48b5-be79-b1965d765ff2" name="event flow">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_7e50720f-3f86-48b5-be79-b1965d765ff2IO FlowMetaType" name="base_IO Flow">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#IO Flow"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9d0d5f7b-089c-4071-9f10-53e56c1c4255" name="iterative" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb325c81-07f6-41ef-a73d-1a170dca5b0e" name="actualParameters" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_106cb5cb-b5e0-4ccc-a8a2-cae9359d2438" name="returnName" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_7187d327-a984-4411-9eb6-e47bc5520045" name="sequenceNumber" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_4002009b-0b03-4a62-bdca-096d9902d8e6" name="externalConnector">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierMetaType" name="base_Classifier" association="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Classifier"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9" name="interface device">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyMetaType" name="base_Property" association="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassMetaType" name="base_Class" association="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17" name="memory">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyMetaType" name="base_Property" association="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassMetaType" name="base_Class" association="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a5f7050c-bfd3-46a2-ad12-f1596dedd77a" name="isDualPorted" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_74dba586-2082-45ca-ab0d-951cb28c26c4" name="isPersistent" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a2fffdda-56e2-4945-9ee9-09e42a921a82" name="isWriteable" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2bc7c771-d672-45db-8f63-c11919228cc7" name="speed" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_371a390e-b64d-4a67-af2a-27fffa91cbd7" name="memoryStart" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_552d7f54-124a-4d28-acfd-fd96a6e3cbca" name="memoryEnd" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_436a286f-3b82-46c0-8aeb-dcebdcfb7a33" name="memorySize" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8d" name="multidropBus">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyMetaType" name="base_Property" association="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassMetaType" name="base_Class" association="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4898ea1-eaf4-4faf-bf4b-16f147474b50" name="protocol" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2bc7c771-d672-45db-8f63-c11919228cc7" name="speed" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_56a5bf55-e792-412f-9f91-de6efe6da00b" name="size" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_fac4fccd-f688-4b8f-8f1f-2f9c870be7db" name="p2pConnection">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierMetaType" name="base_Classifier" association="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Classifier"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_e4898ea1-eaf4-4faf-bf4b-16f147474b50" name="protocol" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_2bc7c771-d672-45db-8f63-c11919228cc7" name="speed" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_56a5bf55-e792-412f-9f91-de6efe6da00b" name="size" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_481f5727-422e-4550-96d4-008d65b66289" name="p2pType" visibility="public" aggregation="shared">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_481f5727-422e-4550-96d4-008d65b66289lowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_481f5727-422e-4550-96d4-008d65b66289upperValue" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196af" name="processor">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyMetaType" name="base_Property" association="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassMetaType" name="base_Class" association="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8cd51e0c-c9f9-4bd4-a2c4-d6c6da1b370d" name="clockSpeed" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_371a390e-b64d-4a67-af2a-27fffa91cbd7" name="memoryStart" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_552d7f54-124a-4d28-acfd-fd96a6e3cbca" name="memoryEnd" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_436a286f-3b82-46c0-8aeb-dcebdcfb7a33" name="memorySize" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218" name="subsystem">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyMetaType" name="base_Property" association="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassMetaType" name="base_Class" association="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyExtension" memberEnd="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyMetaType _aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyExtensionEnd" name="extension_board" type="_aa2395d0-99a7-4d75-b3a8-d9620ad06588" aggregation="composite" association="_aa2395d0-99a7-4d75-b3a8-d9620ad06588PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassExtension" memberEnd="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassMetaType _aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassExtensionEnd" name="extension_board" type="_aa2395d0-99a7-4d75-b3a8-d9620ad06588" aggregation="composite" association="_aa2395d0-99a7-4d75-b3a8-d9620ad06588ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyExtension" memberEnd="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyMetaType _e4698a36-9906-413d-b45d-44b1b7053dc4PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyExtensionEnd" name="extension_board IO device" type="_e4698a36-9906-413d-b45d-44b1b7053dc4" aggregation="composite" association="_e4698a36-9906-413d-b45d-44b1b7053dc4PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassExtension" memberEnd="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassMetaType _e4698a36-9906-413d-b45d-44b1b7053dc4ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassExtensionEnd" name="extension_board IO device" type="_e4698a36-9906-413d-b45d-44b1b7053dc4" aggregation="composite" association="_e4698a36-9906-413d-b45d-44b1b7053dc4ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aPropertyExtension" memberEnd="_65a16490-831d-4e92-8393-080ba88d484aPropertyMetaType _65a16490-831d-4e92-8393-080ba88d484aPropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aPropertyExtensionEnd" name="extension_disk" type="_65a16490-831d-4e92-8393-080ba88d484a" aggregation="composite" association="_65a16490-831d-4e92-8393-080ba88d484aPropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aClassExtension" memberEnd="_65a16490-831d-4e92-8393-080ba88d484aClassMetaType _65a16490-831d-4e92-8393-080ba88d484aClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_65a16490-831d-4e92-8393-080ba88d484aClassExtensionEnd" name="extension_disk" type="_65a16490-831d-4e92-8393-080ba88d484a" aggregation="composite" association="_65a16490-831d-4e92-8393-080ba88d484aClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierExtension" memberEnd="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierMetaType _ef4dde02-e607-4145-b55f-fd1401a53331ClassifierExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierExtensionEnd" name="extension_drop" type="_ef4dde02-e607-4145-b55f-fd1401a53331" aggregation="composite" association="_ef4dde02-e607-4145-b55f-fd1401a53331ClassifierExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_7e50720f-3f86-48b5-be79-b1965d765ff2IO FlowExtension" memberEnd="_7e50720f-3f86-48b5-be79-b1965d765ff2IO FlowExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_7e50720f-3f86-48b5-be79-b1965d765ff2IO FlowExtensionEnd" name="extension_event flow" type="_7e50720f-3f86-48b5-be79-b1965d765ff2" aggregation="composite" association="_7e50720f-3f86-48b5-be79-b1965d765ff2IO FlowExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierExtension" memberEnd="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierMetaType _4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierExtensionEnd" name="extension_externalConnector" type="_4002009b-0b03-4a62-bdca-096d9902d8e6" aggregation="composite" association="_4002009b-0b03-4a62-bdca-096d9902d8e6ClassifierExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyExtension" memberEnd="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyMetaType _59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyExtensionEnd" name="extension_interface device" type="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9" aggregation="composite" association="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassExtension" memberEnd="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassMetaType _59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassExtensionEnd" name="extension_interface device" type="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9" aggregation="composite" association="_59b6dd00-3c48-4d0b-984c-6fb373e6f0d9ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyExtension" memberEnd="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyMetaType _e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyExtensionEnd" name="extension_memory" type="_e4a0fc86-f6fd-4e88-985b-ea792876cf17" aggregation="composite" association="_e4a0fc86-f6fd-4e88-985b-ea792876cf17PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassExtension" memberEnd="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassMetaType _e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassExtensionEnd" name="extension_memory" type="_e4a0fc86-f6fd-4e88-985b-ea792876cf17" aggregation="composite" association="_e4a0fc86-f6fd-4e88-985b-ea792876cf17ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyExtension" memberEnd="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyMetaType _278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyExtensionEnd" name="extension_multidropBus" type="_278bbf86-1a5b-4ab0-a5ed-def190b9da8d" aggregation="composite" association="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dPropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassExtension" memberEnd="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassMetaType _278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassExtensionEnd" name="extension_multidropBus" type="_278bbf86-1a5b-4ab0-a5ed-def190b9da8d" aggregation="composite" association="_278bbf86-1a5b-4ab0-a5ed-def190b9da8dClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierExtension" memberEnd="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierMetaType _fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierExtensionEnd" name="extension_p2pConnection" type="_fac4fccd-f688-4b8f-8f1f-2f9c870be7db" aggregation="composite" association="_fac4fccd-f688-4b8f-8f1f-2f9c870be7dbClassifierExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyExtension" memberEnd="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyMetaType _07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyExtensionEnd" name="extension_processor" type="_07c6548f-e81f-44bd-8f2c-d61bbd2196af" aggregation="composite" association="_07c6548f-e81f-44bd-8f2c-d61bbd2196afPropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassExtension" memberEnd="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassMetaType _07c6548f-e81f-44bd-8f2c-d61bbd2196afClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassExtensionEnd" name="extension_processor" type="_07c6548f-e81f-44bd-8f2c-d61bbd2196af" aggregation="composite" association="_07c6548f-e81f-44bd-8f2c-d61bbd2196afClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyExtension" memberEnd="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyMetaType _50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyExtensionEnd" name="extension_subsystem" type="_50ad2f0a-c743-4a47-b07a-2ac693bf8218" aggregation="composite" association="_50ad2f0a-c743-4a47-b07a-2ac693bf8218PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassExtension" memberEnd="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassMetaType _50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassExtensionEnd" name="extension_subsystem" type="_50ad2f0a-c743-4a47-b07a-2ac693bf8218" aggregation="composite" association="_50ad2f0a-c743-4a47-b07a-2ac693bf8218ClassExtension"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Package" xmi:id="_9ce43262-5944-4409-9dd0-396eed95ecb0" name="Basic Types">
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_43442145-fbf2-11d2-a53d-00104bb05af8" name="any"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_43442146-fbf2-11d2-a53d-00104bb05af8" name="boolean"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_43442147-fbf2-11d2-a53d-00104bb05af8" name="char"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_43442148-fbf2-11d2-a53d-00104bb05af8" name="double"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_43442149-fbf2-11d2-a53d-00104bb05af8" name="float"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4344214a-fbf2-11d2-a53d-00104bb05af8" name="long"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4344214b-fbf2-11d2-a53d-00104bb05af8" name="octet"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4344214c-fbf2-11d2-a53d-00104bb05af8" name="short"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4344214d-fbf2-11d2-a53d-00104bb05af8" name="unsigned long"/>
    <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_4344214e-fbf2-11d2-a53d-00104bb05af8" name="unsigned short"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Profile" xmi:id="_2ae296d0-725f-4ef5-a11c-36c3bbf6bb2a" name="ACS Profile">
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_82203e7d-26e4-4ea6-891e-bc723e168fbf" name="ACSImplementation">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationMetaType" name="base_Operation" association="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Operation"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716b" name="Implementation Language" visibility="public" type="_aabaa298-3a3f-4787-8551-0e757c0c716bEnumeration"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_6be47ff1-16df-441e-a692-dc2445068b04" name="ACSProfile">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_6be47ff1-16df-441e-a692-dc2445068b04PackageMetaType" name="base_Package" association="_6be47ff1-16df-441e-a692-dc2445068b04PackageExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47a01254-ae30-485f-9abb-a71ff9f3990f" name="UserAppData" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1b3e9e02-aac3-4d44-b9ce-4f050a0e8ad2" name="NextFileNumber" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_14b12e1b-4186-45dc-9b55-0c84e895f10a" name="ACSRoot">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageMetaType" name="base_Package" association="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a3afa74b-f879-4956-9dba-76e36ad0c6b6" name="ACSBeRoot" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716bEnumeration" name="Implementation Language_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716bEnumerationLiteralASAL" name="ASAL">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716bLiteralIntegerASAL"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716bEnumerationLiteralVB" name="VB">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_aabaa298-3a3f-4787-8551-0e757c0c716bLiteralIntegerVB" value="1"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationExtension" memberEnd="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationMetaType _82203e7d-26e4-4ea6-891e-bc723e168fbfOperationExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationExtensionEnd" name="extension_ACSImplementation" type="_82203e7d-26e4-4ea6-891e-bc723e168fbf" aggregation="composite" association="_82203e7d-26e4-4ea6-891e-bc723e168fbfOperationExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_6be47ff1-16df-441e-a692-dc2445068b04PackageExtension" memberEnd="_6be47ff1-16df-441e-a692-dc2445068b04PackageMetaType _6be47ff1-16df-441e-a692-dc2445068b04PackageExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6be47ff1-16df-441e-a692-dc2445068b04PackageExtensionEnd" name="extension_ACSProfile" type="_6be47ff1-16df-441e-a692-dc2445068b04" aggregation="composite" association="_6be47ff1-16df-441e-a692-dc2445068b04PackageExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageExtension" memberEnd="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageMetaType _14b12e1b-4186-45dc-9b55-0c84e895f10aPackageExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageExtensionEnd" name="extension_ACSRoot" type="_14b12e1b-4186-45dc-9b55-0c84e895f10a" aggregation="composite" association="_14b12e1b-4186-45dc-9b55-0c84e895f10aPackageExtension"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Profile" xmi:id="_63B664A3-1FCD-4ef9-B580-339D166D56DB" name="C++ Profile">
    <ownedComment xmi:type="uml:Comment" xmi:id="_63B664A3-1FCD-4ef9-B580-339D166D56DBcomment">
      <body>For information about a C++ Profile Stereotype or Tag Definition, see its Description.&#xD;&#xD;For additional information about using the C++ Profile, see the Studio Help.</body>
    </ownedComment>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_782d57c6-78c9-4bc2-a329-d4073844cf93" name="C++ Attribute">
      <ownedComment xmi:type="uml:Comment" xmi:id="_782d57c6-78c9-4bc2-a329-d4073844cf93comment">
        <body>Applying C++ Attribute to an attribute overrides the read-only property and gives direct control over the various qualifiers and type properties. &#xD;&#xD;The the Items tab lists the tags that can be set, which have their own description in each tag definition.&#xD;</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyMetaType" name="base_Property" association="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCC" name="C++ Anonymous Item" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCCcomment">
          <body>This tagdef is applicable to C++ Class, C++ Attribute, C++ Parameter, C++ Enumeration, and C++ Namespace.&#xD;&#xD;It can be used to generate any of these items with no name. For example a bitfield used as padding might be generated anonymously to look like this: -&#xD;&#xD;int : 3;&#xD;&#xD;or you might want to have an anonymous namespace: -&#xD;&#xD;namespace&#xD;{&#xD;  // other stuff&#xD;}&#xD;&#xD;Any anonymous items that are reverse engineered will have this tagdef set to true so then when you resynch the code gets generated correctly.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211" name="C++ Non Member" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211comment">
          <body>When set to TRUE, causes the relevant declaration to appear outside the class construct of its parent, but in the same source file. This works similarly for members of namespace packages, and causes the declaration to be placed outside the namespace in the package's source file.&#xD;  This allows you to put things like constants and type definitions in the same source files as a class / namespace without making them scoped to the class / namespace.&#xD;  The other way to achieve a similar effect is to scope the declaration to the parent package of the class. In this case, files package-name.cpp / package-name.h will contain the declarations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135" name="C++ CV Qualifier" visibility="public" type="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135comment">
          <body>Setting C++ CV Qualifier applies the appropriate modifiers (const / volatile) to the type expression in the source code. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1" name="C++ Indirection" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1comment">
          <body>C++ Indirection is used to specify a prefix to place before a type expression, typically some combination of &quot;*&quot;, &quot;&amp;&quot; and &quot;const&quot;. If this property exists, and is empty, then no type modifier will be added. This overrides the code-generator's default behaviour for parameters and roles, and it overrides the use of the Pointer check-box on Type Definitions.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28" name="C++ Storage Class" visibility="public" type="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28comment">
          <body>C++ supports a number of modifiers for a type expression to control how items are stored and referenced. C++ Storage Class allows you to select modifiers such as &quot;register&quot; to apply to a type expression. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699" name="C++ Array Spec" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699comment">
          <body>Putting a value in C++ Array Spec adds an array suffix to the type definition. The value you give must include the brackets e.g. [value]. This gives you a way to define parameter and variable arrays without also defining a typedef. &#xD;  For type definitions, you would normally use the array range properties to specify an array. For roles, a fixed role multiplicity is normally mapped as an array declaration. In both cases, using C++ Array Spec gives a way to define multi-dimensional arrays, and array indexes based on expressions. It also overrides the default, so can be used where you want to implement the role multiplicity as an array but model it in some other way.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_97a3531b-9d81-4c20-b91e-3a1592cd36fe" name="C++ Bitfield" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_97a3531b-9d81-4c20-b91e-3a1592cd36fecomment">
          <body>C++ Bitfield can be given a value to add as a bitfield qualifier after an attribute declaration.&#xD;  For example, set C++ Bitfield = 4 on an attribute of type int, the variable declaration in C++ will be&#xD;	int myAttr : 4;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFE" name="C++ Function Pointer Return" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFEcomment">
          <body>Gives a return type for a function pointer declaration. See C++ Function Pointer Parameters for an example of how this works. &#xD;  The element Data Type is not used, and is normally left blank if this tag is used.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411" name="C++ Function Pointer Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411comment">
          <body>If this tag is filled in, the contents are put in parentheses (...) immediately after the name in the declaration expression. Typically, you would also give a value for C++ Function Pointer Return and set C++ Indirection = &quot;*&quot;. &#xD;  For example, Attribute1 has:&#xD;    C++ Function Pointer Parameters = &quot;int, char *&quot;&#xD;    C++ Function Pointer Return = &quot;void&quot;&#xD;    C++ Indirection = &quot;*&quot;&#xD;The generated code is&#xD;  void (* Attribute1)(int, char *);</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099" name="C++ Linkage" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099comment">
          <body>Specifies the linkage of an item e.g.&#xD;&#xD;extern &quot;C&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599" name="C++ Class">
      <ownedComment xmi:type="uml:Comment" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599comment">
        <body>The Items tab lists the tags that can be set, which have their own description in each tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599Data TypeMetaType" name="base_Data Type">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Data Type"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceMetaType" name="base_Interface" association="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Interface"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassMetaType" name="base_Class" association="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_FC31023A-D57F-4158-B51F-C67B9349246D" name="C++ Friend Text" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_FC31023A-D57F-4158-B51F-C67B9349246Dcomment">
          <body>Friend specifier code for items specified as friends of this class for which references could not be resolved.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCC" name="C++ Anonymous Item" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCCcomment">
          <body>This tagdef is applicable to C++ Class, C++ Attribute, C++ Parameter, C++ Enumeration, and C++ Namespace.&#xD;&#xD;It can be used to generate any of these items with no name. For example a bitfield used as padding might be generated anonymously to look like this: -&#xD;&#xD;int : 3;&#xD;&#xD;or you might want to have an anonymous namespace: -&#xD;&#xD;namespace&#xD;{&#xD;  // other stuff&#xD;}&#xD;&#xD;Any anonymous items that are reverse engineered will have this tagdef set to true so then when you resynch the code gets generated correctly.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_4855ff87-778c-486f-b2f5-3bbffd6fc4f4" name="C++ Header File Comment" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4855ff87-778c-486f-b2f5-3bbffd6fc4f4comment">
          <body>Class descriptions are placed immediately before the class declaration in the header file. It is often desirable to also put some comment about the file as a whole, and this tag allows you to enter some comment to be placed at the beginning of the header file.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_949ca8e3-f49e-4d9a-8cc8-78ccbdff3a25" name="C++ Implementation File Comment" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_949ca8e3-f49e-4d9a-8cc8-78ccbdff3a25comment">
          <body>Class descriptions are placed immediately before the class declaration in the header file. It is often desirable to also put some comment about the .cpp source file, and this tag allows you to enter some comment to be placed at the beginning of the source file.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_AC687138-B72F-4f55-8067-287A657EEAAE" name="C++ Header Include" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_AC687138-B72F-4f55-8067-287A657EEAAEcomment">
          <body>Most #include statements are generated automatically based on associations, usage of elements, and dependencies. However you may need to include headers that relate to elements that are not in your model. These are placed before any automatically generated #include statements.&#xD;  So for example, on Class1, you might set &#xD;    C++ Header Include = &quot;#include &lt;stdio.h>&quot;&#xD;Assuming that Class1 used Class2 in some way, the file &quot;Class1.h&quot; will contain:&#xD;  #include &lt;stdio.h>&#xD;  // File dependencies&#xD;  #include &quot;Class2.h&quot;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_C1592224-14BD-4ba3-AA41-E747E2985CDD" name="C++ Implementation Include" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_C1592224-14BD-4ba3-AA41-E747E2985CDDcomment">
          <body>Most #include statements are generated automatically based on associations, usage of elements, and dependencies. However you may need to include headers that relate to elements that are not in your model. These are placed before any automatically generated #include statements.&#xD;  So for example, on Class1, you might set &#xD;    C++ Implementation Include = &quot;#include &lt;stdio.h>&quot;&#xD;Assuming that Class1 contained a reference to Class2, the file &quot;Class1.cpp&quot; will contain:&#xD;  #include &lt;stdio.h>&#xD;  // File dependencies&#xD;  #include &quot;Class2.h&quot;&#xD;  #include &quot;Class1.h&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_250A3B7E-028D-45e7-8956-73107D4C2084" name="C++ Inheritance List" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_250A3B7E-028D-45e7-8956-73107D4C2084comment">
          <body>This tag allows a user-defined class-list of inherited classes to replace the modeled generalization relationships. If the tag value is empty, the superclasses from the model are used. &#xD;  This is useful for generating code which inherits from libraries that are not part of the model.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_776FB8FF-5313-4a0b-AB23-07BB3BEFF510" name="C++ Specialization Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_776FB8FF-5313-4a0b-AB23-07BB3BEFF510comment">
          <body>This tagdef is applicable to C++ Class and C++ Dependency.&#xD;When applied to a Class it specifies that the class is actually a specialized version of a template class.&#xD;When applied to a dependency between two classes it specifies that one class is a specialized version of the other e.g.&#xD;&#xD;template &lt;typename T> class vector&#xD;{&#xD;...&#xD;};&#xD;&#xD;template&lt;> class vector&lt;int>&#xD;{&#xD;// Specialized version of vector to deal with integers&#xD;};&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211" name="C++ Non Member" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211comment">
          <body>When set to TRUE, causes the relevant declaration to appear outside the class construct of its parent, but in the same source file. This works similarly for members of namespace packages, and causes the declaration to be placed outside the namespace in the package's source file.&#xD;  This allows you to put things like constants and type definitions in the same source files as a class / namespace without making them scoped to the class / namespace.&#xD;  The other way to achieve a similar effect is to scope the declaration to the parent package of the class. In this case, files package-name.cpp / package-name.h will contain the declarations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3765B5F5-161C-4598-95A2-442F36D78612" name="C++ Forward Declaration Text" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3765B5F5-161C-4598-95A2-442F36D78612comment">
          <body>Forward declaration code for items forward declared by this class for which references could not be resolved.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099" name="C++ Linkage" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099comment">
          <body>Specifies the linkage of an item e.g.&#xD;&#xD;extern &quot;C&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1cc1e611-0d9a-4a06-b6e0-a611b732a0af" name="C++ Using Decls" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_1cc1e611-0d9a-4a06-b6e0-a611b732a0afcomment">
          <body>C++ Using declarations and Using Directives can be associated with Classes and Namespaces. Put the details fo each declaration or directive into the appropriate tag and the code generator will output that text at the beginning of each item during generation.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8837fc24-f6df-43f7-88e9-7534d4f67e46" name="C++ Using Directives" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8837fc24-f6df-43f7-88e9-7534d4f67e46comment">
          <body>C++ Using declarations and Using Directives can be associated with Classes and Namespaces. Put the details fo each declaration or directive into the appropriate tag and the code generator will output that text at the beginning of each item during generation.&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_0b17e736-9b8e-45bd-b2de-76398f36a36f" name="C++ Generate State Machine" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_45ec848a-ace8-4823-be1a-3d3556b1d01f" name="CPP_HDER" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_18b5c275-b1af-4144-920d-4b52f38ff40d" name="CPP_IMPL" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_879B43E0-628F-411e-A1CF-1D347850F93E" name="C++ Forward Declarations" visibility="public" aggregation="shared">
        <ownedComment xmi:type="uml:Comment" xmi:id="_879B43E0-628F-411e-A1CF-1D347850F93Ecomment">
          <body>References items forward declared by this class.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_879B43E0-628F-411e-A1CF-1D347850F93ElowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_879B43E0-628F-411e-A1CF-1D347850F93EupperValue" value="*"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9eebe9d6-de26-40a5-85f3-7b5ddce5104c" name="C++ Friend" visibility="public" aggregation="shared">
        <ownedComment xmi:type="uml:Comment" xmi:id="_9eebe9d6-de26-40a5-85f3-7b5ddce5104ccomment">
          <body>References items specified as friends of this class.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_9eebe9d6-de26-40a5-85f3-7b5ddce5104clowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_9eebe9d6-de26-40a5-85f3-7b5ddce5104cupperValue" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_b4a4a029-1714-40f7-9d14-0b6b88d250cd" name="C++ Dependency">
      <ownedComment xmi:type="uml:Comment" xmi:id="_b4a4a029-1714-40f7-9d14-0b6b88d250cdcomment">
        <body>The Items tab lists the tags that can be set, which have their own description in each tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyMetaType" name="base_Dependency" association="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Dependency"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_84ef977f-6994-4630-8159-5a97098832da" name="C++ Is Using" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_84ef977f-6994-4630-8159-5a97098832dacomment">
          <body>Set this tag to true in order to specify that the C++ Dependency should cause a using declaration or using definition to be generated rather than, or in addition to a #include. If the dependency refers to a class then the generator will generate something like:&#xD;&#xD;using std::vector;&#xD;&#xD;If the dependency is to a namespace then the generator will output something like:&#xD;&#xD;using namespace std;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_87dd360c-7097-49c7-bbf4-bf0b0274ed0e" name="C++ Is System" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_87dd360c-7097-49c7-bbf4-bf0b0274ed0ecomment">
          <body>C++ Is System flag is available to the C++ Dependency stereotype. It controls the way a #include statement is generated from a dependency. If you want the #include to use angle brackets rather than inverted commas, set the tagged value of the C++ Is System tag definition to TRUE.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_791762d9-9e91-45c6-8891-54f82cc09d8f" name="C++ In Implementation" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_791762d9-9e91-45c6-8891-54f82cc09d8fcomment">
          <body>Dependencies between classes and packages imply the need to #include the header file that relates to the target of the dependency. By default, this #include statement is placed in the Implementation file (e.g. Class1.cpp) but if this flag is set to False, the #include is placed in the Header file instead.&#xD;  See C++ Implementation Include and C++ Header Include for other ways to cause files to be included.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_776FB8FF-5313-4a0b-AB23-07BB3BEFF510" name="C++ Specialization Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_776FB8FF-5313-4a0b-AB23-07BB3BEFF510comment">
          <body>This tagdef is applicable to C++ Class and C++ Dependency.&#xD;When applied to a Class it specifies that the class is actually a specialized version of a template class.&#xD;When applied to a dependency between two classes it specifies that one class is a specialized version of the other e.g.&#xD;&#xD;template &lt;typename T> class vector&#xD;{&#xD;...&#xD;};&#xD;&#xD;template&lt;> class vector&lt;int>&#xD;{&#xD;// Specialized version of vector to deal with integers&#xD;};&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_49b447a8-9524-4ffa-ab5d-41786c4cf593" name="C++ Enum Literal">
      <ownedComment xmi:type="uml:Comment" xmi:id="_49b447a8-9524-4ffa-ab5d-41786c4cf593comment">
        <body>Use of the C++ Expression tag is described in the tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_49b447a8-9524-4ffa-ab5d-41786c4cf593Enumeration LiteralMetaType" name="base_Enumeration Literal">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Enumeration Literal"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_9eee8ed3-3dcc-4372-854d-eed91d7d2dcf" name="C++ Expression" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_9eee8ed3-3dcc-4372-854d-eed91d7d2dcfcomment">
          <body>On an enumeration literal, putting a value in the C++ Expression causes it to be used as the enumeration literal value. E.g. &#xD;  C++ Expression = &quot;4&quot; on Typedef1.a&#xD;generates &#xD;  enum Typedef1{Typedef1_a = 4, Typedef1_b};</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_4D7E3FE5-EC47-4c6c-A14D-7AD6D746A674" name="C++ Prefix Name" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4D7E3FE5-EC47-4c6c-A14D-7AD6D746A674comment">
          <body>This tagdef is used to control whether or not to prefix enum literals with the name of the actual enumeration (typedef). If set to TRUE (the default) then an enum literal called red owned by an enumeration called colors would be generated (when using the default name C++ mangling) as colors_red. If it was set to FALSE then it would just be generated as red.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_7c866307-72db-4749-a269-26dffa05da93" name="C++ Enumeration">
      <ownedComment xmi:type="uml:Comment" xmi:id="_7c866307-72db-4749-a269-26dffa05da93comment">
        <body>Use of the C++ Non Member tag is described in the tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_7c866307-72db-4749-a269-26dffa05da93ClassifierMetaType" name="base_Classifier" association="_7c866307-72db-4749-a269-26dffa05da93ClassifierExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Classifier"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211" name="C++ Non Member" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211comment">
          <body>When set to TRUE, causes the relevant declaration to appear outside the class construct of its parent, but in the same source file. This works similarly for members of namespace packages, and causes the declaration to be placed outside the namespace in the package's source file.&#xD;  This allows you to put things like constants and type definitions in the same source files as a class / namespace without making them scoped to the class / namespace.&#xD;  The other way to achieve a similar effect is to scope the declaration to the parent package of the class. In this case, files package-name.cpp / package-name.h will contain the declarations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCC" name="C++ Anonymous Item" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCCcomment">
          <body>This tagdef is applicable to C++ Class, C++ Attribute, C++ Parameter, C++ Enumeration, and C++ Namespace.&#xD;&#xD;It can be used to generate any of these items with no name. For example a bitfield used as padding might be generated anonymously to look like this: -&#xD;&#xD;int : 3;&#xD;&#xD;or you might want to have an anonymous namespace: -&#xD;&#xD;namespace&#xD;{&#xD;  // other stuff&#xD;}&#xD;&#xD;Any anonymous items that are reverse engineered will have this tagdef set to true so then when you resynch the code gets generated correctly.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_641E910C-D1EA-46db-A8F7-B424DDF06AD7" name="C++ Function Template">
      <ownedComment xmi:type="uml:Comment" xmi:id="_641E910C-D1EA-46db-A8F7-B424DDF06AD7comment">
        <body>Use this stereotype on an operation to tell the generator that it is actually a templated function. The associated tagdef C++ Formal Template Parameters contains the template parameter specification.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationMetaType" name="base_Operation" association="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Operation"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_FAF0F0A7-DB6E-4c3b-B739-883E3855D2C7" name="C++ Formal Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_FAF0F0A7-DB6E-4c3b-B739-883E3855D2C7comment">
          <body>This tagdef is used to specify the template parameter specification for templated functions (see C++ Function Template for more details.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_bdc95aab-8453-4dd0-8371-8de5b5916644" name="C++ Ignore">
      <ownedComment xmi:type="uml:Comment" xmi:id="_bdc95aab-8453-4dd0-8371-8de5b5916644comment">
        <body>C++ Ignore applied to a dependency causes the code-generator to ignore the dependency, and not to generate a corresponding #include or forward declaration. &#xD;  This allows model-related dependencies to exist without generating missing includes etc.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyMetaType" name="base_Dependency" association="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Dependency"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605" name="C++ library">
      <ownedAttribute xmi:type="uml:Property" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605Data TypeMetaType" name="base_Data Type">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Data Type"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605PackageMetaType" name="base_Package" association="_63933280-c367-448d-8e9d-83ae269d3605PackageExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605InterfaceMetaType" name="base_Interface" association="_63933280-c367-448d-8e9d-83ae269d3605InterfaceExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Interface"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605ClassMetaType" name="base_Class" association="_63933280-c367-448d-8e9d-83ae269d3605ClassExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_946be000-d7bf-45f6-964a-3de62e261be7" name="C++ LIB_INCLUDE" visibility="public">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_1402D736-A01A-401b-B831-9D62B16E3094" name="C++ Namespace">
      <ownedComment xmi:type="uml:Comment" xmi:id="_1402D736-A01A-401b-B831-9D62B16E3094comment">
        <body>This stereotype is applied to C++ Namespaces. By setting the C++ Anonymous Item tag on this item to true it is possible to generate an anonymous namespace. Anonymous namespaces that are reverse engineered will be given a named in the form &quot;unnamed0&quot; (for example) and have this tag set to true so that they are generated as anonymous on resynch.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1402D736-A01A-401b-B831-9D62B16E3094PackageMetaType" name="base_Package" association="_1402D736-A01A-401b-B831-9D62B16E3094PackageExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCC" name="C++ Anonymous Item" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCCcomment">
          <body>This tagdef is applicable to C++ Class, C++ Attribute, C++ Parameter, C++ Enumeration, and C++ Namespace.&#xD;&#xD;It can be used to generate any of these items with no name. For example a bitfield used as padding might be generated anonymously to look like this: -&#xD;&#xD;int : 3;&#xD;&#xD;or you might want to have an anonymous namespace: -&#xD;&#xD;namespace&#xD;{&#xD;  // other stuff&#xD;}&#xD;&#xD;Any anonymous items that are reverse engineered will have this tagdef set to true so then when you resynch the code gets generated correctly.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1cc1e611-0d9a-4a06-b6e0-a611b732a0af" name="C++ Using Decls" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_1cc1e611-0d9a-4a06-b6e0-a611b732a0afcomment">
          <body>C++ Using declarations and Using Directives can be associated with Classes and Namespaces. Put the details fo each declaration or directive into the appropriate tag and the code generator will output that text at the beginning of each item during generation.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8837fc24-f6df-43f7-88e9-7534d4f67e46" name="C++ Using Directives" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8837fc24-f6df-43f7-88e9-7534d4f67e46comment">
          <body>C++ Using declarations and Using Directives can be associated with Classes and Namespaces. Put the details fo each declaration or directive into the appropriate tag and the code generator will output that text at the beginning of each item during generation.&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_45ec848a-ace8-4823-be1a-3d3556b1d01f" name="CPP_HDER" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_18b5c275-b1af-4144-920d-4b52f38ff40d" name="CPP_IMPL" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_5feb9391-8eb2-42a5-894d-8444cb7fc53e" name="C++ Operation">
      <ownedComment xmi:type="uml:Comment" xmi:id="_5feb9391-8eb2-42a5-894d-8444cb7fc53ecomment">
        <body>The the Items tab lists the tags that can be set, which have their own description in each tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationMetaType" name="base_Operation" association="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Operation"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211" name="C++ Non Member" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211comment">
          <body>When set to TRUE, causes the relevant declaration to appear outside the class construct of its parent, but in the same source file. This works similarly for members of namespace packages, and causes the declaration to be placed outside the namespace in the package's source file.&#xD;  This allows you to put things like constants and type definitions in the same source files as a class / namespace without making them scoped to the class / namespace.&#xD;  The other way to achieve a similar effect is to scope the declaration to the parent package of the class. In this case, files package-name.cpp / package-name.h will contain the declarations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1e8fc712-0474-4cf0-a250-b8fc639f3723" name="C++ Initializer List" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_1e8fc712-0474-4cf0-a250-b8fc639f3723comment">
          <body>This property is only relevant for operations which are class constructors. &#xD;  By default, the code generator creates the constructor's initializer using the Default Value properties from all the Attributes and Roles of the Class. However, for greater control, users can set C++ Initializer List for any constructor of the class.&#xD;  Where a value is given for C++ Initializer List, it overrides the automatically generated initializer list based on default values of Attributes and Roles. &#xD;  This is the only way to apply superclass constructor values as part of a sub-class constructor's initializer.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dfd9a2b5-d5d6-44ff-9c96-8599249497cf" name="C++ Inline" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dfd9a2b5-d5d6-44ff-9c96-8599249497cfcomment">
          <body>Setting C++ Inline=true puts the &quot;inline&quot; keyword in front of the function declaration in the header. It also includes the code-body with the function declaration, rather than separating the declaration and implementation as is usual.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_80dac1f0-db98-4031-9aaf-3d17ad1b47c6" name="C++ Explicit" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_80dac1f0-db98-4031-9aaf-3d17ad1b47c6comment">
          <body>This tag can be set on any operation but it only makes sense for constructors. If true, the constructor is declared explicit.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1" name="C++ Indirection" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1comment">
          <body>C++ Indirection is used to specify a prefix to place before a type expression, typically some combination of &quot;*&quot;, &quot;&amp;&quot; and &quot;const&quot;. If this property exists, and is empty, then no type modifier will be added. This overrides the code-generator's default behaviour for parameters and roles, and it overrides the use of the Pointer check-box on Type Definitions.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135" name="C++ CV Qualifier" visibility="public" type="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135comment">
          <body>Setting C++ CV Qualifier applies the appropriate modifiers (const / volatile) to the type expression in the source code. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_1161b9d3-5582-4a4a-95ac-a6a87cf82976" name="C++ Operation Implementation Comment" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_1161b9d3-5582-4a4a-95ac-a6a87cf82976comment">
          <body>Operation descriptions are generated as comments in the header file. Where there is a need to put an additional description associated with an operation's body, the comment is placed in this tag.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28" name="C++ Storage Class" visibility="public" type="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28comment">
          <body>C++ supports a number of modifiers for a type expression to control how items are stored and referenced. C++ Storage Class allows you to select modifiers such as &quot;register&quot; to apply to a type expression. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFE" name="C++ Function Pointer Return" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFEcomment">
          <body>Gives a return type for a function pointer declaration. See C++ Function Pointer Parameters for an example of how this works. &#xD;  The element Data Type is not used, and is normally left blank if this tag is used.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411" name="C++ Function Pointer Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411comment">
          <body>If this tag is filled in, the contents are put in parentheses (...) immediately after the name in the declaration expression. Typically, you would also give a value for C++ Function Pointer Return and set C++ Indirection = &quot;*&quot;. &#xD;  For example, Attribute1 has:&#xD;    C++ Function Pointer Parameters = &quot;int, char *&quot;&#xD;    C++ Function Pointer Return = &quot;void&quot;&#xD;    C++ Indirection = &quot;*&quot;&#xD;The generated code is&#xD;  void (* Attribute1)(int, char *);</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099" name="C++ Linkage" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099comment">
          <body>Specifies the linkage of an item e.g.&#xD;&#xD;extern &quot;C&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4c" name="C++ Package">
      <ownedComment xmi:type="uml:Comment" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4ccomment">
        <body>This stereotype can be applied to Folder packages and also to the model. It enables the use of the C++ Header Include and C++ Implementation Include so that files generated for folder packages and the model (containing typedefs for example) can have #include statements generated correctly.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelMetaType" name="base_Model" association="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Model"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageMetaType" name="base_Package" association="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Package"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_AC687138-B72F-4f55-8067-287A657EEAAE" name="C++ Header Include" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_AC687138-B72F-4f55-8067-287A657EEAAEcomment">
          <body>Most #include statements are generated automatically based on associations, usage of elements, and dependencies. However you may need to include headers that relate to elements that are not in your model. These are placed before any automatically generated #include statements.&#xD;  So for example, on Class1, you might set &#xD;    C++ Header Include = &quot;#include &lt;stdio.h>&quot;&#xD;Assuming that Class1 used Class2 in some way, the file &quot;Class1.h&quot; will contain:&#xD;  #include &lt;stdio.h>&#xD;  // File dependencies&#xD;  #include &quot;Class2.h&quot;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_C1592224-14BD-4ba3-AA41-E747E2985CDD" name="C++ Implementation Include" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_C1592224-14BD-4ba3-AA41-E747E2985CDDcomment">
          <body>Most #include statements are generated automatically based on associations, usage of elements, and dependencies. However you may need to include headers that relate to elements that are not in your model. These are placed before any automatically generated #include statements.&#xD;  So for example, on Class1, you might set &#xD;    C++ Implementation Include = &quot;#include &lt;stdio.h>&quot;&#xD;Assuming that Class1 contained a reference to Class2, the file &quot;Class1.cpp&quot; will contain:&#xD;  #include &lt;stdio.h>&#xD;  // File dependencies&#xD;  #include &quot;Class2.h&quot;&#xD;  #include &quot;Class1.h&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_45ec848a-ace8-4823-be1a-3d3556b1d01f" name="CPP_HDER" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_18b5c275-b1af-4144-920d-4b52f38ff40d" name="CPP_IMPL" visibility="public" isReadOnly="true">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_59d9c08e-4984-4f40-b656-1356384a67e4" name="C++ Parameter">
      <ownedComment xmi:type="uml:Comment" xmi:id="_59d9c08e-4984-4f40-b656-1356384a67e4comment">
        <body>Applying C++ Parameter to a parameter overrides the declaration settings derived from the mechanism (in, out, inout) and provides direct control of pointer indirection, the use of &quot;const&quot; etc.&#xD;  See the descriptions of the individual tag definitions in the Items tab for details.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterMetaType" name="base_Parameter" association="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Parameter"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCC" name="C++ Anonymous Item" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_15B84A62-67D7-4817-A3FA-4E9D3A5FFFCCcomment">
          <body>This tagdef is applicable to C++ Class, C++ Attribute, C++ Parameter, C++ Enumeration, and C++ Namespace.&#xD;&#xD;It can be used to generate any of these items with no name. For example a bitfield used as padding might be generated anonymously to look like this: -&#xD;&#xD;int : 3;&#xD;&#xD;or you might want to have an anonymous namespace: -&#xD;&#xD;namespace&#xD;{&#xD;  // other stuff&#xD;}&#xD;&#xD;Any anonymous items that are reverse engineered will have this tagdef set to true so then when you resynch the code gets generated correctly.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135" name="C++ CV Qualifier" visibility="public" type="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135comment">
          <body>Setting C++ CV Qualifier applies the appropriate modifiers (const / volatile) to the type expression in the source code. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1" name="C++ Indirection" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1comment">
          <body>C++ Indirection is used to specify a prefix to place before a type expression, typically some combination of &quot;*&quot;, &quot;&amp;&quot; and &quot;const&quot;. If this property exists, and is empty, then no type modifier will be added. This overrides the code-generator's default behaviour for parameters and roles, and it overrides the use of the Pointer check-box on Type Definitions.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699" name="C++ Array Spec" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699comment">
          <body>Putting a value in C++ Array Spec adds an array suffix to the type definition. The value you give must include the brackets e.g. [value]. This gives you a way to define parameter and variable arrays without also defining a typedef. &#xD;  For type definitions, you would normally use the array range properties to specify an array. For roles, a fixed role multiplicity is normally mapped as an array declaration. In both cases, using C++ Array Spec gives a way to define multi-dimensional arrays, and array indexes based on expressions. It also overrides the default, so can be used where you want to implement the role multiplicity as an array but model it in some other way.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28" name="C++ Storage Class" visibility="public" type="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28comment">
          <body>C++ supports a number of modifiers for a type expression to control how items are stored and referenced. C++ Storage Class allows you to select modifiers such as &quot;register&quot; to apply to a type expression. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFE" name="C++ Function Pointer Return" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFEcomment">
          <body>Gives a return type for a function pointer declaration. See C++ Function Pointer Parameters for an example of how this works. &#xD;  The element Data Type is not used, and is normally left blank if this tag is used.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411" name="C++ Function Pointer Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411comment">
          <body>If this tag is filled in, the contents are put in parentheses (...) immediately after the name in the declaration expression. Typically, you would also give a value for C++ Function Pointer Return and set C++ Indirection = &quot;*&quot;. &#xD;  For example, Attribute1 has:&#xD;    C++ Function Pointer Parameters = &quot;int, char *&quot;&#xD;    C++ Function Pointer Return = &quot;void&quot;&#xD;    C++ Indirection = &quot;*&quot;&#xD;The generated code is&#xD;  void (* Attribute1)(int, char *);</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_b0737a93-8c6d-494d-ae1b-8c9f30669273" name="C++ Role">
      <ownedComment xmi:type="uml:Comment" xmi:id="_b0737a93-8c6d-494d-ae1b-8c9f30669273comment">
        <body>Applying C++ Role to a Role overrides the default generator mapping of the Read Only property. &#xD;&#xD;The Items tab lists the tags that can be set, which have their own description in each tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyMetaType" name="base_Property" association="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Property"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135" name="C++ CV Qualifier" visibility="public" type="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135comment">
          <body>Setting C++ CV Qualifier applies the appropriate modifiers (const / volatile) to the type expression in the source code. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1" name="C++ Indirection" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1comment">
          <body>C++ Indirection is used to specify a prefix to place before a type expression, typically some combination of &quot;*&quot;, &quot;&amp;&quot; and &quot;const&quot;. If this property exists, and is empty, then no type modifier will be added. This overrides the code-generator's default behaviour for parameters and roles, and it overrides the use of the Pointer check-box on Type Definitions.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28" name="C++ Storage Class" visibility="public" type="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28comment">
          <body>C++ supports a number of modifiers for a type expression to control how items are stored and referenced. C++ Storage Class allows you to select modifiers such as &quot;register&quot; to apply to a type expression. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699" name="C++ Array Spec" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699comment">
          <body>Putting a value in C++ Array Spec adds an array suffix to the type definition. The value you give must include the brackets e.g. [value]. This gives you a way to define parameter and variable arrays without also defining a typedef. &#xD;  For type definitions, you would normally use the array range properties to specify an array. For roles, a fixed role multiplicity is normally mapped as an array declaration. In both cases, using C++ Array Spec gives a way to define multi-dimensional arrays, and array indexes based on expressions. It also overrides the default, so can be used where you want to implement the role multiplicity as an array but model it in some other way.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_4DE4ED0F-576E-423b-BFB1-70A063DD9AFF" name="C++ Template Name" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_4DE4ED0F-576E-423b-BFB1-70A063DD9AFFcomment">
          <body>The code generator offers default ways to map roles onto STL templates, arrays and pointers. You can override the default by by using a template class. If the template class exists in your model, use C++ Data Type to reference it. If the class only exists in source code (perhaps in a standard library) use C++ Template Name to capture the name of the template class.&#xD;  Either way, use the tag C++ Actual Template Parameters for defining this particular use of the template.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099" name="C++ Linkage" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099comment">
          <body>Specifies the linkage of an item e.g.&#xD;&#xD;extern &quot;C&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8cffbaf8-c53e-4d7f-8905-765caf0df2fb" name="C++ Data Type" visibility="public" aggregation="shared">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8cffbaf8-c53e-4d7f-8905-765caf0df2fbcomment">
          <body>C++ Data Type is used to associate data-type information to model elements that don't have data-types in the UML model - Roles and Exceptions. &#xD;  For a Role, this is a reference to the template class that implements the role's collection. The template class is declared using C++ Actual Template Parameters. If you want to use a template class that is not a part of your model (possibly from a library), useC++ Template Name &#xD;  For an Exception, this is a reference to the class that is used in the &quot;throw&quot; expression in C++.</body>
        </ownedComment>
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Class"/>
        <lowerValue xmi:type="uml:LiteralInteger" xmi:id="_8cffbaf8-c53e-4d7f-8905-765caf0df2fblowerValue"/>
        <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_8cffbaf8-c53e-4d7f-8905-765caf0df2fbupperValue" value="*"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7a" name="C++ Specialization">
      <ownedComment xmi:type="uml:Comment" xmi:id="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7acomment">
        <body>This C++ stereotype is applied to the specialization link between a class and the class it derives from. If the drived class is specializing a C++ template class then the C++ Actual Template Parameters tag will contain the parameters passed to the parent class during generalization e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationMetaType" name="base_Specialization" association="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Specialization"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Stereotype" xmi:id="_6d34d000-7599-4006-9f11-4ec1a484af8c" name="C++ Typedef">
      <ownedComment xmi:type="uml:Comment" xmi:id="_6d34d000-7599-4006-9f11-4ec1a484af8ccomment">
        <body>The Items tab lists the tags that can be set, which have their own description in each tag definition.</body>
      </ownedComment>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierMetaType" name="base_Classifier" association="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierExtension">
        <type xmi:type="uml:Class" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Classifier"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135" name="C++ CV Qualifier" visibility="public" type="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration">
        <ownedComment xmi:type="uml:Comment" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135comment">
          <body>Setting C++ CV Qualifier applies the appropriate modifiers (const / volatile) to the type expression in the source code. </body>
        </ownedComment>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1" name="C++ Indirection" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_dd0b1624-db8c-4378-ab2f-d7eb9ce631a1comment">
          <body>C++ Indirection is used to specify a prefix to place before a type expression, typically some combination of &quot;*&quot;, &quot;&amp;&quot; and &quot;const&quot;. If this property exists, and is empty, then no type modifier will be added. This overrides the code-generator's default behaviour for parameters and roles, and it overrides the use of the Pointer check-box on Type Definitions.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699" name="C++ Array Spec" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_205322c4-0512-4c0e-b28d-e533f08d3699comment">
          <body>Putting a value in C++ Array Spec adds an array suffix to the type definition. The value you give must include the brackets e.g. [value]. This gives you a way to define parameter and variable arrays without also defining a typedef. &#xD;  For type definitions, you would normally use the array range properties to specify an array. For roles, a fixed role multiplicity is normally mapped as an array declaration. In both cases, using C++ Array Spec gives a way to define multi-dimensional arrays, and array indexes based on expressions. It also overrides the default, so can be used where you want to implement the role multiplicity as an array but model it in some other way.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211" name="C++ Non Member" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_3d805825-d2dd-4f1e-8098-45557a4b1211comment">
          <body>When set to TRUE, causes the relevant declaration to appear outside the class construct of its parent, but in the same source file. This works similarly for members of namespace packages, and causes the declaration to be placed outside the namespace in the package's source file.&#xD;  This allows you to put things like constants and type definitions in the same source files as a class / namespace without making them scoped to the class / namespace.&#xD;  The other way to achieve a similar effect is to scope the declaration to the parent package of the class. In this case, files package-name.cpp / package-name.h will contain the declarations.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFE" name="C++ Function Pointer Return" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_33A2A852-4190-4fcd-98DC-451F19B0CDFEcomment">
          <body>Gives a return type for a function pointer declaration. See C++ Function Pointer Parameters for an example of how this works. &#xD;  The element Data Type is not used, and is normally left blank if this tag is used.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411" name="C++ Function Pointer Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_B664C3A3-A4DC-45e8-B708-DFD5BF458411comment">
          <body>If this tag is filled in, the contents are put in parentheses (...) immediately after the name in the declaration expression. Typically, you would also give a value for C++ Function Pointer Return and set C++ Indirection = &quot;*&quot;. &#xD;  For example, Attribute1 has:&#xD;    C++ Function Pointer Parameters = &quot;int, char *&quot;&#xD;    C++ Function Pointer Return = &quot;void&quot;&#xD;    C++ Indirection = &quot;*&quot;&#xD;The generated code is&#xD;  void (* Attribute1)(int, char *);</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9" name="C++ Actual Template Parameters" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_8b87942e-ccb3-4a3a-906f-5285b5c17ac9comment">
          <body>To support the use of template classes, you can use them as the data type for an element, and capture the template parameters in this tag. Note that Roles don't have a Data Type property, so use C++ Data Type or C++ Template Name tags instead.&#xD;  For example, an attribute &quot;a&quot; with data type &quot;myTemplate&quot; and C++ Actual Template Parameters = &quot;int&quot; would generate as &#xD;	myTemplate&lt;int> a;&#xD;&#xD;This tag is also used when a class (template or otherwise) derives from a template class (see C++ Specialization). In this case the contents of this tag contain the parameters that are passed to the superclass during the derivation e.g.&#xD;&#xD;class Foo : Bar&lt;bool, 25>&#xD;{&#xD;...&#xD;};&#xD;&#xD;Note also that in UML, C++ classes can be represented as interfaces. In this case a class can &quot;realize&quot; an interface rather than &quot;specialize&quot; a class. Because of this, the C++ Actual Template Parameters tag is also available to the C++ Dependency stereotype.</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
      <ownedAttribute xmi:type="uml:Property" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099" name="C++ Linkage" visibility="public">
        <ownedComment xmi:type="uml:Comment" xmi:id="_eb21b5fe-801b-49ea-9ab9-2566c25b6099comment">
          <body>Specifies the linkage of an item e.g.&#xD;&#xD;extern &quot;C&quot;&#xD;</body>
        </ownedComment>
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedAttribute>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_9ebb3f55-89e8-4189-a7a2-2dffa38f51b9" name="C++ Basic Types">
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_15d8910c-60e7-4f10-b12c-1bf4edae95cf" name="bool"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_d2b9d4f5-2c83-4386-85ce-11a3dab7d373" name="char"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9f35acbd-22a3-4b2b-8f95-6e56bb737ee9" name="double"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_48139862-489c-4d11-9b95-0795b02d9480" name="float"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_6caa61c1-a26c-4dc5-9bc3-5877cde42233" name="int"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_197d4d40-c308-40ec-b50f-00c562af2877" name="long"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_bf9531dd-fd6d-429c-9c77-72c228475b8e" name="short"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_da3023d6-c35d-4a79-bd14-d95d11fb11d7" name="signed"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_442aab21-1a28-464f-aa9b-aeccd13a03c6" name="unsigned"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_9ebeec38-1c17-4507-a832-85da53f4d521" name="void"/>
      <packagedElement xmi:type="uml:PrimitiveType" xmi:id="_d99286d4-2cf4-4664-abfa-0c687343212e" name="wchar_t"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_d1dbdbfd-3626-4c0c-843b-27d428377808" name="Scripts"/>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration" name="C++ CV Qualifier_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst" name="const">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralvolatile" name="volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegervolatile" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst volatile" name="const volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst volatile" value="3"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration" name="C++ Storage Class_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralauto" name="auto">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerauto" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralregister" name="register">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerregister" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralextern" name="extern">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerextern" value="3"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralmutable" name="mutable">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegermutable" value="4"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration" name="C++ CV Qualifier_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst" name="const">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralvolatile" name="volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegervolatile" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst volatile" name="const volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst volatile" value="3"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration" name="C++ Storage Class_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralauto" name="auto">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerauto" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralregister" name="register">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerregister" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralextern" name="extern">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerextern" value="3"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralmutable" name="mutable">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegermutable" value="4"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration" name="C++ CV Qualifier_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst" name="const">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralvolatile" name="volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegervolatile" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst volatile" name="const volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst volatile" value="3"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration" name="C++ Storage Class_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralauto" name="auto">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerauto" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralregister" name="register">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerregister" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralextern" name="extern">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerextern" value="3"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralmutable" name="mutable">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegermutable" value="4"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration" name="C++ CV Qualifier_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst" name="const">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralvolatile" name="volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegervolatile" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst volatile" name="const volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst volatile" value="3"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28Enumeration" name="C++ Storage Class_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralauto" name="auto">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerauto" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralregister" name="register">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerregister" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralextern" name="extern">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegerextern" value="3"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28EnumerationLiteralmutable" name="mutable">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_29adf189-70cd-4ebb-918b-c6afa7dcbf28LiteralIntegermutable" value="4"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Enumeration" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135Enumeration" name="C++ CV Qualifier_Enumeration">
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteral">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralInteger"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst" name="const">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst" value="1"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralvolatile" name="volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegervolatile" value="2"/>
      </ownedLiteral>
      <ownedLiteral xmi:type="uml:EnumerationLiteral" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135EnumerationLiteralconst volatile" name="const volatile">
        <specification xmi:type="uml:LiteralInteger" xmi:id="_47f99644-38a1-4e1f-9592-15798f7b8135LiteralIntegerconst volatile" value="3"/>
      </ownedLiteral>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyExtension" memberEnd="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyMetaType _782d57c6-78c9-4bc2-a329-d4073844cf93PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyExtensionEnd" name="extension_C++ Attribute" type="_782d57c6-78c9-4bc2-a329-d4073844cf93" aggregation="composite" association="_782d57c6-78c9-4bc2-a329-d4073844cf93PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599Data TypeExtension" memberEnd="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599Data TypeExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599Data TypeExtensionEnd" name="extension_C++ Class" type="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599" aggregation="composite" association="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599Data TypeExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceExtension" memberEnd="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceMetaType _654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceExtensionEnd" name="extension_C++ Class" type="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599" aggregation="composite" association="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599InterfaceExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassExtension" memberEnd="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassMetaType _654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassExtensionEnd" name="extension_C++ Class" type="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599" aggregation="composite" association="_654b6e2b-e5e7-4b4f-9d1f-c50e28feb599ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyExtension" memberEnd="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyMetaType _b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyExtensionEnd" name="extension_C++ Dependency" type="_b4a4a029-1714-40f7-9d14-0b6b88d250cd" aggregation="composite" association="_b4a4a029-1714-40f7-9d14-0b6b88d250cdDependencyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_49b447a8-9524-4ffa-ab5d-41786c4cf593Enumeration LiteralExtension" memberEnd="_49b447a8-9524-4ffa-ab5d-41786c4cf593Enumeration LiteralExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_49b447a8-9524-4ffa-ab5d-41786c4cf593Enumeration LiteralExtensionEnd" name="extension_C++ Enum Literal" type="_49b447a8-9524-4ffa-ab5d-41786c4cf593" aggregation="composite" association="_49b447a8-9524-4ffa-ab5d-41786c4cf593Enumeration LiteralExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_7c866307-72db-4749-a269-26dffa05da93ClassifierExtension" memberEnd="_7c866307-72db-4749-a269-26dffa05da93ClassifierMetaType _7c866307-72db-4749-a269-26dffa05da93ClassifierExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_7c866307-72db-4749-a269-26dffa05da93ClassifierExtensionEnd" name="extension_C++ Enumeration" type="_7c866307-72db-4749-a269-26dffa05da93" aggregation="composite" association="_7c866307-72db-4749-a269-26dffa05da93ClassifierExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationExtension" memberEnd="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationMetaType _641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationExtensionEnd" name="extension_C++ Function Template" type="_641E910C-D1EA-46db-A8F7-B424DDF06AD7" aggregation="composite" association="_641E910C-D1EA-46db-A8F7-B424DDF06AD7OperationExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyExtension" memberEnd="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyMetaType _bdc95aab-8453-4dd0-8371-8de5b5916644DependencyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyExtensionEnd" name="extension_C++ Ignore" type="_bdc95aab-8453-4dd0-8371-8de5b5916644" aggregation="composite" association="_bdc95aab-8453-4dd0-8371-8de5b5916644DependencyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605Data TypeExtension" memberEnd="_63933280-c367-448d-8e9d-83ae269d3605Data TypeExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605Data TypeExtensionEnd" name="extension_C++ library" type="_63933280-c367-448d-8e9d-83ae269d3605" aggregation="composite" association="_63933280-c367-448d-8e9d-83ae269d3605Data TypeExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605PackageExtension" memberEnd="_63933280-c367-448d-8e9d-83ae269d3605PackageMetaType _63933280-c367-448d-8e9d-83ae269d3605PackageExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605PackageExtensionEnd" name="extension_C++ library" type="_63933280-c367-448d-8e9d-83ae269d3605" aggregation="composite" association="_63933280-c367-448d-8e9d-83ae269d3605PackageExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605InterfaceExtension" memberEnd="_63933280-c367-448d-8e9d-83ae269d3605InterfaceMetaType _63933280-c367-448d-8e9d-83ae269d3605InterfaceExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605InterfaceExtensionEnd" name="extension_C++ library" type="_63933280-c367-448d-8e9d-83ae269d3605" aggregation="composite" association="_63933280-c367-448d-8e9d-83ae269d3605InterfaceExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605ClassExtension" memberEnd="_63933280-c367-448d-8e9d-83ae269d3605ClassMetaType _63933280-c367-448d-8e9d-83ae269d3605ClassExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_63933280-c367-448d-8e9d-83ae269d3605ClassExtensionEnd" name="extension_C++ library" type="_63933280-c367-448d-8e9d-83ae269d3605" aggregation="composite" association="_63933280-c367-448d-8e9d-83ae269d3605ClassExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_1402D736-A01A-401b-B831-9D62B16E3094PackageExtension" memberEnd="_1402D736-A01A-401b-B831-9D62B16E3094PackageMetaType _1402D736-A01A-401b-B831-9D62B16E3094PackageExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_1402D736-A01A-401b-B831-9D62B16E3094PackageExtensionEnd" name="extension_C++ Namespace" type="_1402D736-A01A-401b-B831-9D62B16E3094" aggregation="composite" association="_1402D736-A01A-401b-B831-9D62B16E3094PackageExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationExtension" memberEnd="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationMetaType _5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationExtensionEnd" name="extension_C++ Operation" type="_5feb9391-8eb2-42a5-894d-8444cb7fc53e" aggregation="composite" association="_5feb9391-8eb2-42a5-894d-8444cb7fc53eOperationExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelExtension" memberEnd="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelMetaType _a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelExtensionEnd" name="extension_C++ Package" type="_a2b9efc2-3cee-46a8-ad31-c38c44043c4c" aggregation="composite" association="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cModelExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageExtension" memberEnd="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageMetaType _a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageExtensionEnd" name="extension_C++ Package" type="_a2b9efc2-3cee-46a8-ad31-c38c44043c4c" aggregation="composite" association="_a2b9efc2-3cee-46a8-ad31-c38c44043c4cPackageExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterExtension" memberEnd="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterMetaType _59d9c08e-4984-4f40-b656-1356384a67e4ParameterExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterExtensionEnd" name="extension_C++ Parameter" type="_59d9c08e-4984-4f40-b656-1356384a67e4" aggregation="composite" association="_59d9c08e-4984-4f40-b656-1356384a67e4ParameterExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyExtension" memberEnd="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyMetaType _b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyExtensionEnd" name="extension_C++ Role" type="_b0737a93-8c6d-494d-ae1b-8c9f30669273" aggregation="composite" association="_b0737a93-8c6d-494d-ae1b-8c9f30669273PropertyExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationExtension" memberEnd="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationMetaType _fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationExtensionEnd" name="extension_C++ Specialization" type="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7a" aggregation="composite" association="_fcd3bea5-e3d1-4615-b70e-1a157d2a7d7aSpecializationExtension"/>
    </packagedElement>
    <packagedElement xmi:type="uml:Extension" xmi:id="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierExtension" memberEnd="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierMetaType _6d34d000-7599-4006-9f11-4ec1a484af8cClassifierExtensionEnd">
      <ownedEnd xmi:type="uml:ExtensionEnd" xmi:id="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierExtensionEnd" name="extension_C++ Typedef" type="_6d34d000-7599-4006-9f11-4ec1a484af8c" aggregation="composite" association="_6d34d000-7599-4006-9f11-4ec1a484af8cClassifierExtension"/>
    </packagedElement>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f" name="actorLink" memberEnd="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583fuseCaseEnd0 _53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583factorEnd1">
    <ownedEnd xmi:type="uml:Property" xmi:id="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583fuseCaseEnd0" visibility="private" type="_53641f4c-968a-11d3-bd42-b8ef932a583f" association="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f"/>
    <ownedEnd xmi:type="uml:Property" xmi:id="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583factorEnd1" visibility="private" type="_53641f3f-968a-11d3-bd42-b8ef932a583f" association="_53641f3f-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f"/>
  </packagedElement>
  <packagedElement xmi:type="uml:Association" xmi:id="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f" name="actorLink" memberEnd="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583fuseCaseEnd2 _53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583factorEnd3">
    <ownedEnd xmi:type="uml:Property" xmi:id="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583fuseCaseEnd2" visibility="private" type="_53641f4c-968a-11d3-bd42-b8ef932a583f" association="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f"/>
    <ownedEnd xmi:type="uml:Property" xmi:id="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583factorEnd3" visibility="private" type="_53641f41-968a-11d3-bd42-b8ef932a583f" association="_53641f41-968a-11d3-bd42-b8ef932a583fX53641f4c-968a-11d3-bd42-b8ef932a583f"/>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_b1665b19-fe27-11d2-a541-00104bb05af8" name="Time1">
    <when xmi:type="uml:TimeExpression" xmi:id="_b1665b19-fe27-11d2-a541-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_b1665b19-fe27-11d2-a541-00104bb05af8Expr">
        <body>1000</body>
      </expr>
    </when>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_b1665b0a-fe27-11d2-a541-00104bb05af8" name="Time2">
    <when xmi:type="uml:TimeExpression" xmi:id="_b1665b0a-fe27-11d2-a541-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_b1665b0a-fe27-11d2-a541-00104bb05af8Expr">
        <body>1000</body>
      </expr>
    </when>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_43442177-fbf2-11d2-a53d-00104bb05af8" name="Time3">
    <when xmi:type="uml:TimeExpression" xmi:id="_43442177-fbf2-11d2-a53d-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_43442177-fbf2-11d2-a53d-00104bb05af8Expr">
        <body>2000</body>
      </expr>
    </when>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_43442181-fbf2-11d2-a53d-00104bb05af8" name="Time4">
    <when xmi:type="uml:TimeExpression" xmi:id="_43442181-fbf2-11d2-a53d-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_43442181-fbf2-11d2-a53d-00104bb05af8Expr">
        <body>2000</body>
      </expr>
    </when>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_4344217c-fbf2-11d2-a53d-00104bb05af8" name="Time5">
    <when xmi:type="uml:TimeExpression" xmi:id="_4344217c-fbf2-11d2-a53d-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_4344217c-fbf2-11d2-a53d-00104bb05af8Expr">
        <body>4000</body>
      </expr>
    </when>
  </packagedElement>
  <packagedElement xmi:type="uml:TimeEvent" xmi:id="_0018e621-fd6b-11d2-a540-00104bb05af8" name="Time6">
    <when xmi:type="uml:TimeExpression" xmi:id="_0018e621-fd6b-11d2-a540-00104bb05af8When">
      <expr xmi:type="uml:OpaqueExpression" xmi:id="_0018e621-fd6b-11d2-a540-00104bb05af8Expr">
        <body>4000</body>
      </expr>
    </when>
  </packagedElement>
</uml:Model>
